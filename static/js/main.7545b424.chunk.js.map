{"version":3,"sources":["config.js","serviceWorker.js","components/layout/Header.js","components/layout/Footer.js","store/duck/ducks.js","components/time/SetMode.js","components/time/ModePicker.js","components/time/NowTicker.js","components/App.js","pages/Api.js","pages/About.js","pages/Home.js","components/time/DateCard.js","utils/rangeUtil.js","utils/timePeriodUtil.js","components/time/DropdownBaseDate.js","components/time/DatePickerBaseDate.js","utils/localizeThousandUtil.js","utils/timeDiffUtil.js","components/time/TimeDifference.js","components/time/SetDateFromUrl.js","pages/ModeRelativeToNow.js","components/time/DropdownTargetDate.js","components/time/DatePickerTargetDate.js","pages/ModeBetweenTwoDates.js","components/time/DiscoverMoments.js","pages/ModeDiscoverMoments.js","utils/localStorageUtil.js","index.js","store/store.js"],"names":["module","exports","LOCALSTORAGE_NAME","LOCALSTORAGE_NAME_TIMESTAMP","LOCALSTORAGE_SAVE_STATUS","MOMENT_TIME_FORMAT","MOMENT_TIME_DAILY_FORMAT","TIME_SAVE_TO_LOCAL","TIME_DELAY_ACTION","Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","Footer","role","aria-label","href","LOADING","ERROR","CLEAR_STATE","SET_MODE","SET_NOW_DATE","SET_NOW_DAILY_DATE","SET_NOW_YEAR","SET_NOW_MONTH","SET_NOW_WEEK","SET_NOW_DAY","SET_NOW_HOUR","SET_NOW_MINUTE","SET_NOW_SECOND","SET_BASE_DATE","SET_BASE_NAME","SET_BASE_DATE_IS_IN_THE_PAST","SET_BASE_PERIOD","SET_BASE_YEAR_DEFINED","SET_BASE_MONTH_DEFINED","SET_BASE_DAY_DEFINED","SET_BASE_MONTH_DAY_COUNT","SET_BASE_YEAR","SET_BASE_MONTH","SET_BASE_WEEK","SET_BASE_DAY","SET_BASE_HOUR","SET_BASE_MINUTE","SET_BASE_SECOND","SET_AND_RESET_BASE_YEAR","SET_AND_RESET_BASE_MONTH","SET_AND_RESET_BASE_WEEK","SET_AND_RESET_BASE_DAY","SET_AND_RESET_BASE_HOUR","SET_AND_RESET_BASE_MINUTE","SET_TARGET_DATE","SET_TARGET_NAME","SET_TARGET_YEAR_DEFINED","SET_TARGET_MONTH_DEFINED","SET_TARGET_DAY_DEFINED","SET_TARGET_MONTH_DAY_COUNT","SET_TARGET_YEAR","SET_TARGET_MONTH","SET_TARGET_WEEK","SET_TARGET_DAY","SET_TARGET_HOUR","SET_TARGET_MINUTE","SET_TARGET_SECOND","SET_AND_RESET_TARGET_YEAR","SET_AND_RESET_TARGET_MONTH","SET_AND_RESET_TARGET_WEEK","SET_AND_RESET_TARGET_DAY","SET_AND_RESET_TARGET_HOUR","SET_AND_RESET_TARGET_MINUTE","SET_ADD_TO_BASE_DATE_YEARS","SET_ADD_TO_BASE_DATE_MONTHS","SET_ADD_TO_BASE_DATE_WEEKS","SET_ADD_TO_BASE_DATE_DAYS","SET_ADD_TO_BASE_DATE_HOURS","SET_ADD_TO_BASE_DATE_MINUTES","SET_ADD_TO_BASE_DATE_SECONDS","SET_FRONTEND","SET_MOBILE_MENU_STATUS","initialStateMain","loading","error","errorId","errorCode","errorMessage","errorMessageTitle","errorMessageFriendly","mode","nowDate","nowDailyDate","nowYear","nowMonth","nowDay","nowHour","nowMinute","nowSecond","baseDate","baseDateName","baseDateIsInThePast","basePeriod","baseYearDefined","baseMonthDefined","baseDayDefined","baseYear","baseMonth","baseMonthDayCount","baseDay","baseHour","baseMinute","baseSecond","targetDate","targetDateName","targetYearDefined","targetMonthDefined","targetDayDefined","targetYear","targetMonth","targetMonthDayCount","targetDay","targetHour","targetMinute","targetSecond","addToBaseDateYears","addToBaseDateMonths","addToBaseDateWeeks","addToBaseDateDays","addToBaseDateHours","addToBaseDateMinutes","addToBaseDateSeconds","frontend","mobileMenuStatus","reducerMain","state","arguments","length","undefined","action","type","Object","objectSpread","payload","nowWeek","baseName","baseWeek","baseWeekDefined","targetName","targetWeek","targetWeekDefined","parseInt","setModeAction","setBaseDateAction","setBaseDateIsInThePastAction","setBasePeriodAction","setBaseYearDefinedAction","setBaseMonthDayCountAction","setBaseSecondAction","setTargetDateAction","setTargetYearDefinedAction","setTargetMonthDayCountAction","setTargetSecondAction","SetMode","_this$props","this","props","_this$props$classes","classes","history","_this$props$mode","_this$props$modeType","modeType","_this$props$modeName","modeName","_this$props$modePath","modePath","classesButtonMode","concat","onClick","push","disabled","Component","mapDispatchToProps","SetModeConnect","connect","_ref","main","withRouter","ModePicker","instruction","optional","time_SetMode","ModePickerConnect","NowTicker","clearInterval","timerID","updateNow","_this","setInterval","tick","setNowDailyDateAction","setNowDateAction","setNowYearAction","setNowMonthAction","setNowDayAction","setNowHourAction","setNowMinuteAction","setNowSecondAction","newNowDailyDate","moment","format","newNowDate","newNowYear","newNowMonth","newNowDay","newNowHour","newNowMinute","newNowSecond","NowTickerConnect","App","layout_Header","time_ModePicker","children","time_NowTicker","layout_Footer","Api","About","Home","DateCard","_this$props$heading","heading","_this$props$date","date","numberRange","start","end","Array","fill","map","d","i","timePeriod","dateA","dateB","b","difference","diff","time","DropdownBaseDate","value","_this$props$nowDailyD","_this$props$targetDat","_this$props$match","_this$props$match$par","params","_this$props$match$par2","urlBaseYear","_this$props2","setAndResetBaseYearAction","setAndResetBaseMonthAction","setAndResetBaseDayAction","setAndResetBaseHourAction","setAndResetBaseMinuteAction","theBaseDate","year","daysInMonth","month","hour","minute","second","setTimePeriod","_this$props3","_this$props3$tabIndex","tabIndex","_this$props3$options","options","_this$props3$value","_this$props3$type","_this$props3$disabled","_this$props3$classes","htmlFor","id","onChange","e","setBaseDate","target","style","textTransform","key","uuidv4","setBaseNameAction","setBaseWeekAction","DropdownBaseDateConnect","DatePickerBaseDate","units","thisYear","localeData","months","item","reverse","_this$props$instructi","instructionStart","_this$props$instructi2","instructionYearDefined","_this$props$baseYearD","instructions","_this$props2$baseYear","_this$props2$baseMont","_this$props2$baseDayD","_this$props2$baseYear2","_this$props2$baseMont2","_this$props2$baseDay","_this$props2$baseHour","_this$props2$baseMinu","_this$props2$baseSeco","Fragment","renderInstructions","time_DropdownBaseDate","getTimeUnit","DatePickerBaseDateConnect","localizeThousand","toLocaleString","replace","timeDiff","before","after","differenceLocalized","TimeDifference","_this$props$timeA","timeA","_this$props$timeB","timeB","renderHeading","TimeDifferenceConnect","SetDateFromUrl","setModeFromUrl","setDate","prevProps","_this$props$baseDate","urlMode","_this$props2$match","_this$props2$match$pa","_this$props2$match$pa2","_this$props3$nowDate","_this$props3$targetDa","_this$props3$match","_this$props3$match$pa","_this$props3$match$pa2","_this$props3$match$pa3","_this$props4","_this$props4$match","_this$props4$match$pa","_this$props4$match$pa2","_this$props4$match$pa3","urlBaseMonth","_this$props4$match$pa4","urlBaseDay","_this$props4$match$pa5","urlBaseHour","_this$props4$match$pa6","urlBaseMinute","_this$props4$match$pa7","urlBaseSecond","setBaseYearAction","setBaseMonthDefinedAction","setBaseMonthAction","setBaseDayDefinedAction","setBaseDayAction","setBaseHourAction","setBaseMinuteAction","_this$props5","_this$props5$match","_this$props5$match$pa","_this$props5$match$pa2","urlTargetYear","_this$props5$match$pa3","urlTargetMonth","_this$props5$match$pa4","urlTargetDay","_this$props5$match$pa5","urlTargetHour","_this$props5$match$pa6","urlTargetMinute","_this$props5$match$pa7","urlTargetSecond","setTargetYearAction","setTargetMonthDefinedAction","setTargetMonthAction","setTargetDayDefinedAction","setTargetDayAction","setTargetHourAction","setTargetMinuteAction","theTargetDate","_this$props$match2","_this$props$match2$pa","_this$props$match2$pa2","_this$props$match2$pa3","_this$props$match2$pa4","setDateBase","setDateTarget","SetDateFromUrlConnect","ModeRelativeToNow","classesFrstRow","classesSecondRow","time_SetDateFromUrl","time_DatePickerBaseDate","time_DateCard","time_TimeDifference","ModeRelativeToNowConnect","DropdownTargetDate","setAndResetTargetYearAction","setAndResetTargetMonthAction","setAndResetTargetDayAction","setAndResetTargetHourAction","setAndResetTargetMinuteAction","setTargetDate","setTargetNameAction","setTargetWeekAction","DropdownTargetDateConnect","DatePickerTargetDate","_this$props$targetYea","_this$props2$targetYe","_this$props2$targetMo","_this$props2$targetDa","_this$props2$targetYe2","_this$props2$targetMo2","_this$props2$targetDa2","_this$props2$targetHo","_this$props2$targetMi","_this$props2$targetSe","time_DropdownTargetDate","DatePickerTargetDateConnect","ModeBetweenTwoDates","time_DatePickerTargetDate","ModeBetweenTwoDatesConnect","DiscoverMoments","renderBaseDateName","theMoment","add","name","setAddToBaseYearsAction","setAddToBaseMonthsAction","setAddToBaseWeeksAction","setAddToBaseDaysAction","setAddToBaseHoursAction","setAddToBaseMinutesAction","setAddToBaseSecondsAction","maxLength","getDiscoverMomentsHeading","getDiscoverMomentsMoment","renderInputFields","DiscoverMomentsConnect","ModeDiscoverMoments","time_DiscoverMoments","ModeDiscoverMomentsConnect","isAvail","storage","localStorage","x","setItem","removeItem","localStorageStub","v","process","persistState","JSON","stringify","Date","getTime","loadState","getItem","parse","removePersistedState","clear","shouldStateInLocalStorageBeDeleted","stateSetDate","newdate","store","mockWindow","persistedState","rootReducer","combineReducers","finalWindow","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","subscribe","throttle","getState","initStore","ReactDom","render","es","HashRouter","basename","components_App","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7545b424.chunk.js","sourcesContent":["\nmodule.exports = {\n  LOCALSTORAGE_NAME: 'stateMoments',\n  LOCALSTORAGE_NAME_TIMESTAMP: 'stateMomentsTimeStamp',\n  LOCALSTORAGE_SAVE_STATUS: false,\n  MOMENT_TIME_FORMAT: 'MMMM Do YYYY, HH:mm:ss',\n  MOMENT_TIME_DAILY_FORMAT: 'MMMM Do YYYY',\n  TIME_SAVE_TO_LOCAL: 1000, // 1 SEC\n  TIME_DELAY_ACTION: 500, // 0.5 SEC\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Header = () => (\n  <header>\n    <div className=\"logo\"/>\n    <h2>Moments</h2>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer>\n    Brought to you by <span role=\"img\" aria-label=\"emoji male-technologist\">👨‍💻</span>&nbsp;<a className=\"link\" href=\"http://sidhree.com\">Wallace Sidhrée</a>\n  </footer>\n);\n\nexport default Footer;\n","\n// ------- ActionTypes - generic\nconst LOADING = 'LOADING';\nconst ERROR = 'ERROR';\nconst CLEAR_STATE = 'CLEAR_STATE';\nconst SET_MODE = 'SET_MODE'\n// ------- ActionTypes - now\nconst SET_NOW_DATE = 'SET_NOW_DATE';\nconst SET_NOW_DAILY_DATE = 'SET_NOW_DAILY_DATE';\nconst SET_NOW_YEAR = 'SET_NOW_YEAR';\nconst SET_NOW_MONTH = 'SET_NOW_MONTH';\nconst SET_NOW_WEEK = 'SET_NOW_WEEK';\nconst SET_NOW_DAY = 'SET_NOW_DAY';\nconst SET_NOW_HOUR = 'SET_NOW_HOUR';\nconst SET_NOW_MINUTE = 'SET_NOW_MINUTE';\nconst SET_NOW_SECOND = 'SET_NOW_SECOND';\n// ------- ActionTypes - base\n// Misc\nconst SET_BASE_DATE = 'SET_BASE_DATE';\nconst SET_BASE_NAME = 'SET_BASE_NAME';\nconst SET_BASE_DATE_IS_IN_THE_PAST = 'SET_BASE_DATE_IS_IN_THE_PAST';\nconst SET_BASE_PERIOD = 'SET_BASE_PERIOD';\nconst SET_BASE_YEAR_DEFINED = 'SET_BASE_YEAR_DEFINED';\nconst SET_BASE_MONTH_DEFINED = 'SET_BASE_MONTH_DEFINED';\nconst SET_BASE_DAY_DEFINED = 'SET_BASE_DAY_DEFINED';\nconst SET_BASE_MONTH_DAY_COUNT = 'SET_BASE_MONTH_DAY_COUNT';\n// Set\nconst SET_BASE_YEAR = 'SET_BASE_YEAR';\nconst SET_BASE_MONTH = 'SET_BASE_MONTH';\nconst SET_BASE_WEEK = 'SET_BASE_WEEK';\nconst SET_BASE_DAY = 'SET_BASE_DAY';\nconst SET_BASE_HOUR = 'SET_BASE_HOUR';\nconst SET_BASE_MINUTE = 'SET_BASE_MINUTE';\nconst SET_BASE_SECOND = 'SET_BASE_SECOND';\n// Set & reset\nconst SET_AND_RESET_BASE_YEAR = 'SET_AND_RESET_BASE_YEAR';\nconst SET_AND_RESET_BASE_MONTH = 'SET_AND_RESET_BASE_MONTH';\nconst SET_AND_RESET_BASE_WEEK = 'SET_AND_RESET_BASE_WEEK';\nconst SET_AND_RESET_BASE_DAY = 'SET_AND_RESET_BASE_DAY';\nconst SET_AND_RESET_BASE_HOUR = 'SET_AND_RESET_BASE_HOUR';\nconst SET_AND_RESET_BASE_MINUTE = 'SET_AND_RESET_BASE_MINUTE';\n// ------- ActionTypes - target\n// Misc\nconst SET_TARGET_DATE = 'SET_TARGET_DATE';\nconst SET_TARGET_NAME = 'SET_TARGET_NAME';\nconst SET_TARGET_YEAR_DEFINED = 'SET_TARGET_YEAR_DEFINED';\nconst SET_TARGET_MONTH_DEFINED = 'SET_TARGET_MONTH_DEFINED';\nconst SET_TARGET_DAY_DEFINED = 'SET_TARGET_DAY_DEFINED';\nconst SET_TARGET_MONTH_DAY_COUNT = 'SET_TARGET_MONTH_DAY_COUNT';\n// Set\nconst SET_TARGET_YEAR = 'SET_TARGET_YEAR';\nconst SET_TARGET_MONTH = 'SET_TARGET_MONTH';\nconst SET_TARGET_WEEK = 'SET_TARGET_WEEK';\nconst SET_TARGET_DAY = 'SET_TARGET_DAY';\nconst SET_TARGET_HOUR = 'SET_TARGET_HOUR';\nconst SET_TARGET_MINUTE = 'SET_TARGET_MINUTE';\nconst SET_TARGET_SECOND = 'SET_TARGET_SECOND';\n// Set & reset\nconst SET_AND_RESET_TARGET_YEAR = 'SET_AND_RESET_TARGET_YEAR';\nconst SET_AND_RESET_TARGET_MONTH = 'SET_AND_RESET_TARGET_MONTH';\nconst SET_AND_RESET_TARGET_WEEK = 'SET_AND_RESET_TARGET_WEEK';\nconst SET_AND_RESET_TARGET_DAY = 'SET_AND_RESET_TARGET_DAY';\nconst SET_AND_RESET_TARGET_HOUR = 'SET_AND_RESET_TARGET_HOUR';\nconst SET_AND_RESET_TARGET_MINUTE = 'SET_AND_RESET_TARGET_MINUTE';\n// ------- ActionTypes - add to base\nconst SET_ADD_TO_BASE_DATE_YEARS = 'SET_ADD_TO_BASE_DATE_YEARS';\nconst SET_ADD_TO_BASE_DATE_MONTHS = 'SET_ADD_TO_BASE_DATE_MONTHS';\nconst SET_ADD_TO_BASE_DATE_WEEKS = 'SET_ADD_TO_BASE_DATE_WEEKS';\nconst SET_ADD_TO_BASE_DATE_DAYS = 'SET_ADD_TO_BASE_DATE_DAYS';\nconst SET_ADD_TO_BASE_DATE_HOURS = 'SET_ADD_TO_BASE_DATE_HOURS';\nconst SET_ADD_TO_BASE_DATE_MINUTES = 'SET_ADD_TO_BASE_DATE_MINUTES';\nconst SET_ADD_TO_BASE_DATE_SECONDS = 'SET_ADD_TO_BASE_DATE_SECONDS';\n// ActionTypes - frontend\nconst SET_FRONTEND = 'SET_FRONTEND';\nconst SET_MOBILE_MENU_STATUS = 'SET_MOBILE_MENU_STATUS';\n\n// Initial state\nexport const initialStateMain = {\n  // Generic\n  loading: false,\n  error: false,\n  errorId: '',\n  errorCode: '',\n  errorMessage: '',\n  errorMessageTitle: '',\n  errorMessageFriendly: '',\n  mode: '', // 'relativeToNow', 'betweenTwoDates', 'discoverMoment'\n  // Now moment\n  nowDate: '',\n  nowDailyDate: '',\n  nowYear: '',\n  nowMonth: '',\n  nowDay: '',\n  nowHour: '',\n  nowMinute: '',\n  nowSecond: '',\n  // Base moment\n  baseDate: '',\n  baseDateName: '',\n  baseDateIsInThePast: false,\n  basePeriod: '',\n  baseYearDefined: false,\n  baseMonthDefined: false,\n  baseDayDefined: false,\n  baseYear: '',\n  baseMonth: '',\n  baseMonthDayCount: null,\n  baseDay: '',\n  baseHour: '',\n  baseMinute: '',\n  baseSecond: '',\n  // Target moment\n  targetDate: '',\n  targetDateName: '',\n  targetYearDefined: false,\n  targetMonthDefined: false,\n  targetDayDefined: false,\n  targetYear: '',\n  targetMonth: '',\n  targetMonthDayCount: null,\n  targetDay: '',\n  targetHour: '',\n  targetMinute: '',\n  targetSecond: '',\n  // 'Add to base' mode\n  addToBaseDateYears: null,\n  addToBaseDateMonths: null,\n  addToBaseDateWeeks: null,\n  addToBaseDateDays: null,\n  addToBaseDateHours: null,\n  addToBaseDateMinutes: null,\n  addToBaseDateSeconds: null,\n  // Frontend\n  frontend: {\n    mobileMenuStatus: false,\n  }\n}\n\n// Reducers\nexport function reducerMain (state = initialStateMain, action) {\n  switch (action.type) {\n    // ------- Reducers - generic\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorId: action.payload.errorId,\n        errorCode: action.payload.errorCode,\n        errorMessage: action.payload.errorMessage,\n        errorMessageFriendly: action.payload.errorMessageFriendly,\n        errorMessageTitle: action.payload.errorMessageTitle,\n      }\n    case CLEAR_STATE:\n      return initialStateMain\n    case SET_MODE:\n      return {\n        ...state,\n        loading: false,\n        mode: action.payload\n      }\n    // ------- Reducers - now\n    case SET_NOW_DATE:\n      return {\n        ...state,\n        loading: false,\n        nowDate: action.payload\n      }\n    case SET_NOW_DAILY_DATE:\n      return {\n        ...state,\n        loading: false,\n        nowDailyDate: action.payload\n      }\n    case SET_NOW_YEAR:\n      return {\n        ...state,\n        loading: false,\n        nowYear: action.payload,\n      }\n    case SET_NOW_MONTH:\n      return {\n        ...state,\n        loading: false,\n        nowMonth: action.payload\n      }\n    case SET_NOW_WEEK:\n      return {\n        ...state,\n        loading: false,\n        nowWeek: action.payload\n      }\n    case SET_NOW_DAY:\n      return {\n        ...state,\n        loading: false,\n        nowDay: action.payload\n      }\n    case SET_NOW_HOUR:\n      return {\n        ...state,\n        loading: false,\n        nowHour: action.payload\n      }\n    case SET_NOW_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        nowMinute: action.payload\n      }\n    case SET_NOW_SECOND:\n      return {\n        ...state,\n        loading: false,\n        nowSecond: action.payload\n      }\n    // ------- Reducers - base\n    // Misc\n    case SET_BASE_DATE:\n      return {\n        ...state,\n        loading: false,\n        baseDate: action.payload\n      }\n    case SET_BASE_NAME:\n      return {\n        ...state,\n        loading: false,\n        baseName: action.payload\n      }\n    case SET_BASE_DATE_IS_IN_THE_PAST:\n      return {\n        ...state,\n        loading: false,\n        baseDateIsInThePast: action.payload\n      }\n    case SET_BASE_PERIOD:\n      return {\n        ...state,\n        loading: false,\n        basePeriod: action.payload\n      }\n    case SET_BASE_YEAR_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        baseYearDefined: action.payload,\n      }\n    case SET_BASE_MONTH_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        baseMonthDefined: action.payload,\n      }\n    case SET_BASE_DAY_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        baseDayDefined: action.payload,\n      }\n    case SET_BASE_MONTH_DAY_COUNT:\n      return {\n        ...state,\n        loading: false,\n        baseMonthDayCount: action.payload\n      }\n    // Set\n    case SET_BASE_YEAR:\n      return {\n        ...state,\n        loading: false,\n        baseYear: action.payload,\n      }\n    case SET_BASE_MONTH:\n      return {\n        ...state,\n        loading: false,\n        baseMonth: action.payload\n      }\n    case SET_BASE_WEEK:\n      return {\n        ...state,\n        loading: false,\n        baseWeek: action.payload\n      }\n    case SET_BASE_DAY:\n      return {\n        ...state,\n        loading: false,\n        baseDay: action.payload\n      }\n    case SET_BASE_HOUR:\n      return {\n        ...state,\n        loading: false,\n        baseHour: action.payload\n      }\n    case SET_BASE_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        baseMinute: action.payload\n      }\n    case SET_BASE_SECOND:\n      return {\n        ...state,\n        loading: false,\n        baseSecond: action.payload\n      }\n    // Set & reset\n    case SET_AND_RESET_BASE_YEAR:\n      return {\n        ...state,\n        loading: false,\n        // Note that we can't set 'baseYearDefined: true' here,\n        // as this is an input field that needs to be validated. Because of that\n        // we should use 'SET_BASE_YEAR_DEFINED' instead\n        baseYear: action.payload,\n        baseMonth: '',\n        baseMonthDefined: false,\n        baseMonthDayCount: null,\n        baseDay: '',\n        baseDayDefined: false,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_AND_RESET_BASE_MONTH:\n      return {\n        ...state,\n        loading: false,\n        baseMonthDefined: true,\n        baseMonth: action.payload,\n        baseDay: '',\n        baseDayDefined: false,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_AND_RESET_BASE_WEEK:\n      return {\n        ...state,\n        loading: false,\n        baseWeekDefined: true,\n        baseWeek: action.payload,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_AND_RESET_BASE_DAY:\n      return {\n        ...state,\n        loading: false,\n        baseDayDefined: true,\n        baseDay: action.payload,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_AND_RESET_BASE_HOUR:\n      return {\n        ...state,\n        loading: false,\n        baseHour: action.payload,\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_AND_RESET_BASE_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        baseMinute: action.payload,\n        baseSecond: '',\n      }\n    // ------- Reducers - target\n    // Misc\n    case SET_TARGET_DATE:\n      return {\n        ...state,\n        loading: false,\n        targetDate: action.payload\n      }\n    case SET_TARGET_NAME:\n      return {\n        ...state,\n        loading: false,\n        targetName: action.payload\n      }\n    case SET_TARGET_YEAR_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        targetYearDefined: action.payload,\n      }\n    case SET_TARGET_MONTH_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        targetMonthDefined: action.payload,\n      }\n    case SET_TARGET_DAY_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        targetDayDefined: action.payload,\n      }\n    case SET_TARGET_MONTH_DAY_COUNT:\n      return {\n        ...state,\n        loading: false,\n        targetMonthDayCount: action.payload\n      }\n    // Set\n    case SET_TARGET_YEAR:\n      return {\n        ...state,\n        loading: false,\n        targetYear: action.payload,\n      }\n    case SET_TARGET_MONTH:\n      return {\n        ...state,\n        loading: false,\n        targetMonth: action.payload\n      }\n    case SET_TARGET_WEEK:\n      return {\n        ...state,\n        loading: false,\n        targetWeek: action.payload\n      }\n    case SET_TARGET_DAY:\n      return {\n        ...state,\n        loading: false,\n        targetDay: action.payload\n      }\n    case SET_TARGET_HOUR:\n      return {\n        ...state,\n        loading: false,\n        targetHour: action.payload\n      }\n    case SET_TARGET_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        targetMinute: action.payload\n      }\n    case SET_TARGET_SECOND:\n      return {\n        ...state,\n        loading: false,\n        targetSecond: action.payload\n      }\n    // Set & reset\n    case SET_AND_RESET_TARGET_YEAR:\n      return {\n        ...state,\n        loading: false,\n        // Note that we can't set 'targetYearDefined: true' here,\n        // as this is an input field that needs to be validated. Because of that\n        // we should use 'SET_TARGET_YEAR_DEFINED' instead\n        targetYear: action.payload,\n        targetMonth: '',\n        targetMonthDefined: false,\n        targetMonthDayCount: null,\n        targetDay: '',\n        targetDayDefined: false,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_AND_RESET_TARGET_MONTH:\n      return {\n        ...state,\n        loading: false,\n        targetMonthDefined: true,\n        targetMonth: action.payload,\n        targetDay: '',\n        targetDayDefined: false,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_AND_RESET_TARGET_WEEK:\n      return {\n        ...state,\n        loading: false,\n        targetWeekDefined: true,\n        targetWeek: action.payload,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_AND_RESET_TARGET_DAY:\n      return {\n        ...state,\n        loading: false,\n        targetDayDefined: true,\n        targetDay: action.payload,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_AND_RESET_TARGET_HOUR:\n      return {\n        ...state,\n        loading: false,\n        targetHour: action.payload,\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_AND_RESET_TARGET_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        targetMinute: action.payload,\n        targetSecond: '',\n      }\n    // 'Add to base' mode\n    case SET_ADD_TO_BASE_DATE_YEARS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateYears: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_MONTHS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateMonths: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_WEEKS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateWeeks: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_DAYS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateDays: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_HOURS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateHours: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_MINUTES:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateMinutes: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_SECONDS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateSeconds: parseInt(action.payload, 10)\n      }\n    // Frontend\n    case SET_FRONTEND:\n      return {\n        ...state,\n        frontend: action.payload\n      }\n    case SET_MOBILE_MENU_STATUS:\n      return {\n        ...state,\n        loading: false,\n        frontend: {\n          ...state.frontend,\n          mobileMenuStatus: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n\n// Actions Generic\nexport const clearStateAction = (action) => ({ type: CLEAR_STATE, payload: action });\nexport const errorAction = (action) => ({ type: ERROR, payload: { errorId: action.errorId, errorCode: action.errorCode, errorMessage: action.errorMessage, errorMessageTitle: action.errorMessageTitle, errorMessageFriendly: action.errorMessageFriendly }}); // for testing\nexport const loadingAction = (action) => ({ type: LOADING, payload: action }); // for testing\nexport const setModeAction = (action) => ({ type: SET_MODE, payload: action });\n// ------- ActionTypes - now\nexport const setNowDateAction = (action) => ({ type: SET_NOW_DATE, payload: action })\nexport const setNowDailyDateAction = (action) => ({ type: SET_NOW_DAILY_DATE, payload: action })\nexport const setNowYearAction = (action) => ({ type: SET_NOW_YEAR, payload: action });\nexport const setNowMonthAction = (action) => ({ type: SET_NOW_MONTH, payload: action });\nexport const setNowWeekAction = (action) => ({ type: SET_NOW_WEEK, payload: action });\nexport const setNowDayAction = (action) => ({ type: SET_NOW_DAY, payload: action });\nexport const setNowHourAction = (action) => ({ type: SET_NOW_HOUR, payload: action });\nexport const setNowMinuteAction = (action) => ({ type: SET_NOW_MINUTE, payload: action });\nexport const setNowSecondAction = (action) => ({ type: SET_NOW_SECOND, payload: action });\n// ------- ActionTypes - base\n// Misc\nexport const setBaseDateAction = (action) => ({ type: SET_BASE_DATE, payload: action });\nexport const setBaseNameAction = (action) => ({ type: SET_BASE_NAME, payload: action });\nexport const setBaseDateIsInThePastAction = (action) => ({ type: SET_BASE_DATE_IS_IN_THE_PAST, payload: action });\nexport const setBasePeriodAction = (action) => ({ type: SET_BASE_PERIOD, payload: action });\nexport const setBaseYearDefinedAction = (action) => ({ type: SET_BASE_YEAR_DEFINED, payload: action });\nexport const setBaseMonthDefinedAction = (action) => ({ type: SET_BASE_MONTH_DEFINED, payload: action });\nexport const setBaseDayDefinedAction = (action) => ({ type: SET_BASE_DAY_DEFINED, payload: action });\nexport const setBaseMonthDayCountAction = (action) => ({ type: SET_BASE_MONTH_DAY_COUNT, payload: action })\n// Set\nexport const setBaseYearAction = (action) => ({ type: SET_BASE_YEAR, payload: action });\nexport const setBaseMonthAction = (action) => ({ type: SET_BASE_MONTH, payload: action });\nexport const setBaseWeekAction = (action) => ({ type: SET_BASE_WEEK, payload: action });\nexport const setBaseDayAction = (action) => ({ type: SET_BASE_DAY, payload: action });\nexport const setBaseHourAction = (action) => ({ type: SET_BASE_HOUR, payload: action });\nexport const setBaseMinuteAction = (action) => ({ type: SET_BASE_MINUTE, payload: action });\nexport const setBaseSecondAction = (action) => ({ type: SET_BASE_SECOND, payload: action });\n// Set & reset\nexport const setAndResetBaseYearAction = (action) => ({ type: SET_AND_RESET_BASE_YEAR, payload: action });\nexport const setAndResetBaseMonthAction = (action) => ({ type: SET_AND_RESET_BASE_MONTH, payload: action });\nexport const setAndResetBaseWeekAction = (action) => ({ type: SET_AND_RESET_BASE_WEEK, payload: action });\nexport const setAndResetBaseDayAction = (action) => ({ type: SET_AND_RESET_BASE_DAY, payload: action });\nexport const setAndResetBaseHourAction = (action) => ({ type: SET_AND_RESET_BASE_HOUR, payload: action });\nexport const setAndResetBaseMinuteAction = (action) => ({ type: SET_AND_RESET_BASE_MINUTE, payload: action });\n// ------- ActionTypes - target\n// Misc\nexport const setTargetDateAction = (action) => ({ type: SET_TARGET_DATE, payload: action });\nexport const setTargetNameAction = (action) => ({ type: SET_TARGET_NAME, payload: action });\nexport const setTargetYearDefinedAction = (action) => ({ type: SET_TARGET_YEAR_DEFINED, payload: action });\nexport const setTargetMonthDefinedAction = (action) => ({ type: SET_TARGET_MONTH_DEFINED, payload: action });\nexport const setTargetDayDefinedAction = (action) => ({ type: SET_TARGET_DAY_DEFINED, payload: action });\nexport const setTargetMonthDayCountAction = (action) => ({ type: SET_TARGET_MONTH_DAY_COUNT, payload: action })\n// Set\nexport const setTargetYearAction = (action) => ({ type: SET_TARGET_YEAR, payload: action });\nexport const setTargetMonthAction = (action) => ({ type: SET_TARGET_MONTH, payload: action });\nexport const setTargetWeekAction = (action) => ({ type: SET_TARGET_WEEK, payload: action });\nexport const setTargetDayAction = (action) => ({ type: SET_TARGET_DAY, payload: action });\nexport const setTargetHourAction = (action) => ({ type: SET_TARGET_HOUR, payload: action });\nexport const setTargetMinuteAction = (action) => ({ type: SET_TARGET_MINUTE, payload: action });\nexport const setTargetSecondAction = (action) => ({ type: SET_TARGET_SECOND, payload: action });\n// Set & reset\nexport const setAndResetTargetYearAction = (action) => ({ type: SET_AND_RESET_TARGET_YEAR, payload: action });\nexport const setAndResetTargetMonthAction = (action) => ({ type: SET_AND_RESET_TARGET_MONTH, payload: action });\nexport const setAndResetTargetWeekAction = (action) => ({ type: SET_AND_RESET_TARGET_WEEK, payload: action });\nexport const setAndResetTargetDayAction = (action) => ({ type: SET_AND_RESET_TARGET_DAY, payload: action });\nexport const setAndResetTargetHourAction = (action) => ({ type: SET_AND_RESET_TARGET_HOUR, payload: action });\nexport const setAndResetTargetMinuteAction = (action) => ({ type: SET_AND_RESET_TARGET_MINUTE, payload: action });\n// ------- ActionTypes - add to base\nexport const setAddToBaseYearsAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_YEARS, payload: action });\nexport const setAddToBaseMonthsAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_MONTHS, payload: action });\nexport const setAddToBaseWeeksAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_WEEKS, payload: action });\nexport const setAddToBaseDaysAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_DAYS, payload: action });\nexport const setAddToBaseHoursAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_HOURS, payload: action });\nexport const setAddToBaseMinutesAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_MINUTES, payload: action });\nexport const setAddToBaseSecondsAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_SECONDS, payload: action });\n// ActionTypes - frontend\nexport const setMobileMenuStatusAction = (action) => ({ type: SET_MOBILE_MENU_STATUS, payload: action });\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import actions\nimport {\n  setModeAction\n} from './../../store/duck/ducks';\n\nclass SetMode extends Component {\n  render () {\n    const {\n      classes = '',\n      history,\n      mode = '',\n      modeType = '',\n      modeName = '',\n      modePath = '',\n      setModeAction\n    } = this.props;\n    let classesButtonMode = `button button--mode${classes ? ' ' + classes : ''}`;\n    if (mode) {\n      classesButtonMode = `button button--mode${mode === modeType ? ' selected' : ' not-selected'}${classes ? ' ' + classes : ''}`;\n    }\n    return (\n      <div className=\"set-mode\">\n        <button\n          className={classesButtonMode}\n          onClick={() => {\n            setModeAction(mode === modeType ? '' : modeType)\n            if (history && modePath && !mode) {\n              // If 'mode' is not set, we want to navigate to 'modePath'\n              history.push(modePath);\n            } else if (history && modePath && mode) {\n              // If 'mode' is set, we want to navigate back to '/' as it's only a reset\n              history.push('/');\n            }\n          }}\n          disabled={mode && mode !== modeType ? true : false}\n        >\n          {modeName}\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    mode: main.mode\n  }\n}\nconst mapDispatchToProps = {\n  setModeAction,\n}\nconst SetModeConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetMode);\n\nSetMode.propTypes = {\n  // Props passed down\n  modeName: PropTypes.string.isRequired,\n  modeType: PropTypes.string.isRequired,\n  modepath: PropTypes.string,\n  // Props coming from state\n  mode: PropTypes.string,\n  setModeAction: PropTypes.func.isRequired\n};\n\nexport default withRouter(SetModeConnect);\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SetMode from './SetMode';\n\nclass ModePicker extends Component {\n  render () {\n    const {\n      mode = ''\n    } = this.props;\n    let instruction = 'Choose a mode';\n    if (mode) {\n      instruction = 'Selected mode';\n    }\n    const optional = <span className=\"optional\">(click to deselect)</span>;\n    return (\n      <section className=\"section--mode-picker\">\n        <div className=\"container-fluid m-t-20\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"container-flex\">\n                <p className=\"m-b-20\">{instruction} {mode ? optional : ''}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className={`container-flex${mode ? '--center ' : ' '}mode-picker`}>\n                <SetMode\n                  modeType = \"relativeToNow\"\n                  modeName = \"Relative to Now\"\n                  modePath = \"/1/relative-to-now\"\n                />\n                <SetMode\n                  modeType = \"betweenTwoDates\"\n                  modeName = \"Between Two Dates\"\n                  modePath = \"/2/between-two-dates\"\n                />\n                <SetMode\n                  modeType = \"discoverMoment\"\n                  modeName = \"Discover Moment\"\n                  modePath = \"/3/discover-moment\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    mode: main.mode,\n  }\n}\nconst ModePickerConnect = connect(\n  mapStateToProps,\n)(ModePicker);\n\nModePicker.propTypes = {\n  // Props coming from state\n  mode: PropTypes.string\n};\n\nexport default ModePickerConnect;\n","// Import dependencies\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n// Import constants\nimport {\n  MOMENT_TIME_FORMAT,\n  MOMENT_TIME_DAILY_FORMAT,\n} from './../../config';\n\n// Import actions\nimport {\n  setNowDateAction,\n  setNowDailyDateAction,\n  setNowYearAction,\n  setNowMonthAction,\n  setNowDayAction,\n  setNowHourAction,\n  setNowMinuteAction,\n  setNowSecondAction\n} from './../../store/duck/ducks';\n\nclass NowTicker extends Component {\n  componentWillMount () {\n    clearInterval(this.timerID);\n    this.updateNow();\n  }\n  componentDidMount () {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n  updateNow () {\n    const {\n      setNowDailyDateAction,\n      setNowDateAction,\n      setNowYearAction,\n      setNowMonthAction,\n      setNowDayAction,\n      setNowHourAction,\n      setNowMinuteAction,\n      setNowSecondAction,\n      nowDailyDate,\n      nowDate,\n      nowYear,\n      nowMonth,\n      nowDay,\n      nowHour,\n      nowMinute,\n      nowSecond,\n      mode,\n      baseYear,\n    } = this.props;\n    const newNowDailyDate = moment().format(MOMENT_TIME_DAILY_FORMAT);\n    const newNowDate = moment().format(MOMENT_TIME_FORMAT);\n    const newNowYear = moment().format('YYYY');\n    const newNowMonth = moment().format('MMMM');\n    const newNowDay = moment().format('D');\n    const newNowHour = moment().format('H');\n    const newNowMinute = moment().format('mm');\n    const newNowSecond = moment().format('ss');\n    // Only do this when these conditions are met, for performance's sake\n    if (mode === 'relativeToNow' || mode === 'discoverMoment') {\n      if (newNowDailyDate !== nowDailyDate) {\n        setNowDailyDateAction(moment().format(MOMENT_TIME_DAILY_FORMAT));\n      }\n    }\n    if (mode && baseYear) {\n      if (newNowDate !== nowDate) {\n        setNowDateAction(newNowDate);\n      }\n      if (newNowYear !== nowYear) {\n        setNowYearAction(newNowYear);\n      }\n      if (newNowMonth !== nowMonth) {\n        setNowMonthAction(newNowMonth);\n      }\n      if (newNowDay !== nowDay) {\n        setNowDayAction(newNowDay);\n      }\n      if (newNowHour !== nowHour) {\n        setNowHourAction(newNowHour);\n      }\n      if (newNowMinute !== nowMinute) {\n        setNowMinuteAction(newNowMinute);\n      }\n      if (newNowSecond !== nowSecond) {\n        setNowSecondAction(newNowSecond);\n      }\n    }\n  }\n  tick () {\n    this.updateNow();\n  }\n  render () {\n    // This component is just a 'now' time ticker, nothing to render\n    return null;\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    mode: main.mode,\n    baseYear: main.baseYear,\n    nowDailyDate: main.nowDailyDate,\n    nowDate: main.nowDate,\n    nowYear: main.nowYear,\n    nowMonth: main.nowMonth,\n    nowDay: main.nowDay,\n    nowHour: main.nowHour,\n    nowMinute: main.nowMinute,\n    nowSecond: main.nowSecond,\n  }\n}\nconst mapDispatchToProps = {\n  setNowDateAction,\n  setNowDailyDateAction,\n  setNowYearAction,\n  setNowMonthAction,\n  setNowDayAction,\n  setNowHourAction,\n  setNowMinuteAction,\n  setNowSecondAction\n}\nconst NowTickerConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NowTicker);\n\nNowTicker.propTypes = {\n  mode: PropTypes.string,\n  baseYear: PropTypes.string,\n  nowDailyDate: PropTypes.string,\n  nowDate: PropTypes.string,\n  nowYear: PropTypes.string,\n  nowMonth: PropTypes.string,\n  nowDay: PropTypes.string,\n  nowHour: PropTypes.string,\n  nowMinute: PropTypes.string,\n  nowSecond: PropTypes.string,\n};\n\nexport default NowTickerConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\n\n// Import components\nimport Header from './layout/Header';\nimport Footer from './layout/Footer';\nimport ModePicker from './../components/time/ModePicker';\nimport NowTicker from './../components/time/NowTicker';\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"app\">\n        <Header/>\n        <ModePicker/>\n        <div className=\"content\">\n          {this.props.children}\n        </div>\n        <NowTicker/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nclass Api extends Component {\n  render () {\n    return (\n      <p>\n        Api\n      </p>\n    );\n  }\n}\n\nexport default Api;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render () {\n    return (\n      <p>\n        About\n      </p>\n    );\n  }\n}\n\nexport default About;\n","// Import dependencies\nimport React, { Component } from 'react';\n\nclass Home extends Component {\n  render () {\n    return (\n      <section className=\"section section--alt\">\n        <div className=\"container-fluid m-t-10 m-b-10\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"container-flex\">\n                <p><span role=\"img\" aria-label=\"emoji calendar\">📆</span><span role=\"img\" aria-label=\"emoji crystal ball\">🔮</span><span role=\"img\" aria-label=\"emoji sparkles\">✨</span></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DateCard extends Component {\n  render () {\n    const {\n      // Props passed down\n      heading = '',\n      date = '',\n      classes = '',\n    } = this.props;\n    return (\n      <div className={`date${classes ? ' ' + classes : ''}`}>\n        <h3 className=\"date__heading m-b-20\">\n          {heading}\n        </h3>\n        <div className=\"date__moment\">\n          {date}\n        </div>\n      </div>\n    )\n  }\n}\n\nDateCard.propTypes = {\n  // Props passed down\n  heading: PropTypes.string,\n  date: PropTypes.string,\n  classes: PropTypes.string,\n};\n\nexport default DateCard;\n","export const numberRange = (start, end) => new Array(end - start + 1).fill().map((d, i) => i + start);\n\nexport const alphabetRange = (start, end) => new Array(end.charCodeAt(0) - start.charCodeAt(0) + 1).fill().map((d, i) => String.fromCharCode(i + start.charCodeAt(0)));\n\n// Uses:\n// numberRange(2, 8); // [ 2, 3, 4, 5, 6, 7, 8 ]\n// alphabetRange('c', 'g'); // [ 'c', 'd', 'e', 'f', 'g' ]","// Import dependencies\nimport moment from 'moment';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../config';\n\nexport const timePeriod = (dateA, dateB) => {\n  const a = moment(dateA, MOMENT_TIME_FORMAT);\n  const b = moment(dateB, MOMENT_TIME_FORMAT);\n  const difference = a.diff(b); // 'diff' is a 'moment' method\n  let time = '';\n  if (difference > 0) {\n    time = 'past';\n  } else if (difference === 0) {\n    time = 'now';\n  } else if (difference < 0) {\n    time = 'future';\n  }\n  return time;\n}\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { timePeriod } from './../../utils/timePeriodUtil';\n\n// Import actions\nimport {\n  setBaseDateAction,\n  setBaseNameAction,\n  setBaseDateIsInThePastAction,\n  setBasePeriodAction,\n  setBaseYearDefinedAction,\n  setAndResetBaseYearAction,\n  setAndResetBaseMonthAction,\n  setBaseMonthDayCountAction,\n  setBaseWeekAction,\n  setAndResetBaseDayAction,\n  setAndResetBaseHourAction,\n  setAndResetBaseMinuteAction,\n  setBaseSecondAction\n} from './../../store/duck/ducks';\n\nclass DropdownBaseDate extends Component {\n  setTimePeriod (value) {\n    // Determine if date is in the 'past' or 'future'\n    const {\n      mode = '',\n      nowDailyDate = '',\n      targetDate = '',\n      setBaseDateIsInThePastAction,\n      setBasePeriodAction,\n      match: {\n        params: {\n          urlBaseYear = '',\n        } = {}\n      } = {}\n    } = this.props;\n    // If 'urlBaseYear' is defined, we are definitely setting our dates based on\n    // 'URL' parameters\n    if (!urlBaseYear) {\n      if (mode === 'relativeToNow' || mode === 'discoverMoment') {\n        if (nowDailyDate) {\n          setBasePeriodAction(timePeriod(nowDailyDate, value));\n          if (timePeriod(nowDailyDate, value) === 'past') {\n            setBaseDateIsInThePastAction(true);\n          } else {\n            setBaseDateIsInThePastAction(false);\n          }\n        }\n      } else if (mode === 'betweenTwoDates') {\n        if (targetDate) {\n          setBasePeriodAction(timePeriod(targetDate, value));\n          if (timePeriod(targetDate, value) === 'past') {\n            setBaseDateIsInThePastAction(true);\n          } else {\n            setBaseDateIsInThePastAction(false);\n          }\n        }\n      }\n    }\n  }\n  setBaseDate (value, mode) {\n    const {\n      baseYear,\n      baseMonth,\n      baseDay,\n      baseHour,\n      baseMinute,\n      setBaseDateAction,\n      setAndResetBaseYearAction,\n      setAndResetBaseMonthAction,\n      setBaseMonthDayCountAction,\n      setAndResetBaseDayAction,\n      setAndResetBaseHourAction,\n      setAndResetBaseMinuteAction,\n      setBaseSecondAction,\n      setBaseYearDefinedAction\n    } = this.props;\n    let theBaseDate = '';\n    let theBaseMonthDayCount = '';\n    if (mode === 'year') {\n      if (value !== '' && value !== undefined) {\n        theBaseDate = moment().year(value).format(MOMENT_TIME_FORMAT);\n        theBaseMonthDayCount = moment(theBaseDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setBaseMonthDayCountAction(theBaseMonthDayCount);\n        setBaseYearDefinedAction(true);\n      } else {\n        setBaseYearDefinedAction(false);\n      }\n      setAndResetBaseYearAction(value);\n    } else if (mode === 'month') {\n      theBaseDate = moment().year(baseYear).month(value).format(MOMENT_TIME_FORMAT);\n      theBaseMonthDayCount = moment(theBaseDate, MOMENT_TIME_FORMAT).daysInMonth();\n      setBaseMonthDayCountAction(theBaseMonthDayCount);\n      setAndResetBaseMonthAction(value);\n    } else if (mode === 'day') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(value).format(MOMENT_TIME_FORMAT);\n      setAndResetBaseDayAction(value);\n    } else if (mode === 'hour') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(baseDay).hour(value).format(MOMENT_TIME_FORMAT);\n      setAndResetBaseHourAction(value);\n    } else if (mode === 'minute') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(baseDay).hour(baseHour).minute(value).format(MOMENT_TIME_FORMAT);\n      setAndResetBaseMinuteAction(value);\n    } else if (mode === 'second') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(baseDay).hour(baseHour).minute(baseMinute).second(value).format(MOMENT_TIME_FORMAT);\n      setBaseSecondAction(value);\n    }\n    this.setTimePeriod(theBaseDate);\n    setBaseDateAction(theBaseDate);\n  }\n  render () {\n    const {\n      tabIndex = 1,\n      options = [],\n      value = '',\n      type = '',\n      disabled = false,\n      classes = ''\n    } = this.props;\n    return (\n      <div className=\"dropdown\">\n        <label className=\"hidden\" htmlFor=\"date-initial-select-hour\">{`Please select a ${type}:`}</label>\n        <select\n          tabIndex = {tabIndex}\n          id = {`date-initial-select-${type}`}\n          value = {value}\n          onChange = {e => {\n            this.setBaseDate(e.target.value, type);\n          }}\n          disabled = {disabled}\n          style = {{textTransform: 'capitalize'}}\n          className = {`form__dropdown m-b-20 ${classes}`}\n        >\n          <option key={uuidv4()} value=\"\">{type}</option>\n          {options}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseYear: main.baseYear,\n    baseMonth: main.baseMonth,\n    baseDay: main.baseDay,\n    baseHour: main.baseHour,\n    baseMinute: main.baseMinute,\n    nowDailyDate: main.nowDailyDate,\n    targetDate: main.targetDate,\n    mode: main.mode,\n  }\n}\nconst mapDispatchToProps = {\n  setBaseDateAction,\n  setBaseNameAction,\n  setBaseDateIsInThePastAction,\n  setBasePeriodAction,\n  setBaseYearDefinedAction,\n  setAndResetBaseYearAction,\n  setAndResetBaseMonthAction,\n  setBaseMonthDayCountAction,\n  setBaseWeekAction,\n  setAndResetBaseDayAction,\n  setAndResetBaseHourAction,\n  setAndResetBaseMinuteAction,\n  setBaseSecondAction\n}\nconst DropdownBaseDateConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DropdownBaseDate);\n\nDropdownBaseDate.propTypes = {\n  // Props related to select, passed down\n  options: PropTypes.array.isRequired,\n  tabIndex: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  classes: PropTypes.string,\n  // Props related to choices, passed from state\n  baseYear: PropTypes.string,\n  baseMonth: PropTypes.string,\n  baseDay: PropTypes.string,\n  baseHour: PropTypes.string,\n  baseMinute: PropTypes.string,\n  nowDailyDate: PropTypes.string,\n  targetDate: PropTypes.string,\n  mode: PropTypes.string,\n};\n\nexport default DropdownBaseDateConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import utils\nimport { numberRange } from './../../utils/rangeUtil';\n\n// Import components\nimport DropdownBaseDate from './DropdownBaseDate';\n\nclass DatePickerBaseDate extends Component {\n  getTimeUnit (mode) {\n    const {\n      baseMonthDayCount\n    } = this.props;\n    const options = [];\n    let units = [];\n    if (mode === 'year') {\n      const thisYear = moment().year();\n      units = numberRange(1900, thisYear);\n    } else if (mode === 'month') {\n      units = moment.localeData().months();\n    } else if (mode === 'day') {\n      if (baseMonthDayCount) {\n        units = numberRange(1, baseMonthDayCount);\n      } else {\n        units = numberRange(1, 31);\n      }\n    } else if (mode === 'hour') {\n      units = numberRange(0, 23);\n    } else if (mode === 'minute' || mode === 'second') {\n      units = numberRange(0, 59);\n    }\n    units.map((item) => options.push(<option key={uuidv4()} value={item}>{item}</option>));\n    if (mode === 'year') {\n      return options.reverse();\n    }\n    return options;\n  }\n  renderInstructions () {\n    const {\n      // Props passed down\n      instructionStart = 'To get started, choose a year:',\n      instructionYearDefined = 'Refine your date:',\n      // Props passed from state\n      baseYearDefined = false,\n    } = this.props;\n    let instructions = '';\n    const optional = <span className=\"optional\">(optional)</span>;\n    if (!baseYearDefined) {\n      instructions = instructionStart\n    } else {\n      instructions = instructionYearDefined;\n    }\n    return (\n      <div className=\"m-b-10 align-center\">\n        {instructions} {!baseYearDefined ? '' : optional}\n      </div>\n    );\n  }\n  render () {\n    const {\n      baseYearDefined = false,\n      baseMonthDefined = false,\n      baseDayDefined = false,\n      baseYear = '',\n      baseMonth = '',\n      baseDay = '',\n      baseHour = '',\n      baseMinute = '',\n      baseSecond = '',\n    } = this.props;\n    return (\n      <>\n        {this.renderInstructions()}\n        <div className=\"container-flex date-picker\">\n          <DropdownBaseDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('year')}\n            value = {baseYear}\n            type = \"year\"\n          />\n          {baseYearDefined &&\n            <DropdownBaseDate\n              tabIndex = \"1\"\n              options = {this.getTimeUnit('month')}\n              value = {baseMonth}\n              type = \"month\"\n            />\n          }\n          {baseMonthDefined &&\n            <DropdownBaseDate\n              tabIndex = \"1\"\n              options = {this.getTimeUnit('day')}\n              value = {baseDay}\n              type = \"day\"\n            />\n          }\n          {baseDayDefined &&\n            <>\n              <DropdownBaseDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('hour')}\n                value = {baseHour}\n                type = \"hour\"\n              />\n              <DropdownBaseDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('minute')}\n                value = {baseMinute}\n                type = \"minute\"\n              />\n              <DropdownBaseDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('second')}\n                value = {baseSecond}\n                type = \"second\"\n              />\n            </>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseYearDefined: main.baseYearDefined,\n    baseMonthDefined: main.baseMonthDefined,\n    baseDayDefined: main.baseDayDefined,\n    baseYear: main.baseYear,\n    baseMonth: main.baseMonth,\n    baseMonthDayCount: main.baseMonthDayCount,\n    baseDay: main.baseDay,\n    baseHour: main.baseHour,\n    baseMinute: main.baseMinute,\n    baseSecond: main.baseSecond,\n  }\n}\n\nconst DatePickerBaseDateConnect = connect(\n  mapStateToProps\n)(DatePickerBaseDate);\n\nDatePickerBaseDate.propTypes = {\n  // Props passed down\n  instructionStart: PropTypes.string,\n  instructionYearDefined: PropTypes.string,\n  // Props passed from state\n  baseYearDefined: PropTypes.bool,\n  baseMonthDefined: PropTypes.bool,\n  baseDayDefined: PropTypes.bool,\n  baseYear: PropTypes.string,\n  baseMonth: PropTypes.string,\n  baseMonthDayCount: PropTypes.number,\n  baseDay: PropTypes.string,\n  baseHour: PropTypes.string,\n  baseMinute: PropTypes.string,\n  baseSecond: PropTypes.string,\n};\n\nexport default DatePickerBaseDateConnect;\n","export const localizeThousand = value => value.toLocaleString().replace('-', '');\n","// Import dependencies\nimport moment from 'moment';\n\n// Import utils\nimport { localizeThousand } from './localizeThousandUtil';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../config';\n\nexport const timeDiff = (before, after, type) => {\n  const a = moment(before, MOMENT_TIME_FORMAT);\n  const b = moment(after, MOMENT_TIME_FORMAT);\n  const difference = a.diff(b, type); // 'diff' is a 'moment' method\n  const differenceLocalized = localizeThousand(difference);\n  return `${differenceLocalized} ${type}`;\n}\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import utils\nimport { timeDiff } from './../../utils/timeDiffUtil';\n\nclass TimeDifference extends Component {\n  renderHeading () {\n    const {\n      // Passed down\n      timeA = '',\n      timeB = '',\n      // Passed from state\n      baseDate,\n      nowDate,\n      baseDateIsInThePast,\n    } = this.props;\n    // Support mode '1' & '3'\n    if (timeA === baseDate && timeB === nowDate) {\n      if (baseDateIsInThePast) {\n        return 'Time since';\n      }\n      return 'Time until';\n    }\n    // Support mode '2'\n    // Note that there will be a check for 'timeA' & 'timeB'\n    // around the fallback return, so we're safe doing this\n    return 'Time difference';\n  }\n  render () {\n    const {\n      timeA,\n      timeB,\n    } = this.props;\n    if (timeA && timeB) {\n      return (\n        <>\n          <h3 className=\"m-t-20 m-b-20\">{this.renderHeading()}</h3>\n          <div className=\"time-unit-output bl-purple\">\n            {timeDiff(timeA, timeB, 'years')}\n          </div>\n          <div className=\"time-unit-output bl-fuchsia\">\n            {timeDiff(timeA, timeB, 'months')}\n          </div>\n          <div className=\"time-unit-output bl-red\">\n            {timeDiff(timeA, timeB, 'weeks')}\n          </div>\n          <div className=\"time-unit-output bl-orange\">\n            {timeDiff(timeA, timeB, 'days')}\n          </div>\n          <div className=\"time-unit-output bl-yellow\">\n            {timeDiff(timeA, timeB, 'hours')}\n          </div>\n          <div className=\"time-unit-output bl-fav-green-light\">\n            {timeDiff(timeA, timeB, 'minutes')}\n          </div>\n          <div className=\"time-unit-output bl-teal\">\n            {timeDiff(timeA, timeB, 'seconds')}\n          </div>\n        </>\n      )\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    nowDate: main.nowDate,\n  }\n}\n\nconst TimeDifferenceConnect = connect(\n  mapStateToProps\n)(TimeDifference);\n\nTimeDifference.propTypes = {\n  // Passed down\n  timeA: PropTypes.string,\n  timeB: PropTypes.string,\n  // Passed from state\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  nowDate: PropTypes.string,\n};\n\nexport default TimeDifferenceConnect;\n","// Import dependencies\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { timePeriod } from './../../utils/timePeriodUtil';\n\n// Import actions\nimport {\n  setBaseDateAction,\n  setBaseDateIsInThePastAction,\n  setBasePeriodAction,\n  setBaseYearDefinedAction,\n  setBaseMonthDefinedAction,\n  setBaseDayDefinedAction,\n  setBaseMonthDayCountAction,\n  setBaseYearAction,\n  setBaseMonthAction,\n  setBaseDayAction,\n  setBaseHourAction,\n  setBaseMinuteAction,\n  setBaseSecondAction,\n  setTargetDateAction,\n  setTargetYearDefinedAction,\n  setTargetMonthDefinedAction,\n  setTargetDayDefinedAction,\n  setTargetMonthDayCountAction,\n  setTargetYearAction,\n  setTargetMonthAction,\n  setTargetDayAction,\n  setTargetHourAction,\n  setTargetMinuteAction,\n  setTargetSecondAction,\n  setModeAction\n} from './../../store/duck/ducks';\n\nclass SetDateFromUrl extends Component {\n  componentWillMount () {\n    this.setModeFromUrl();\n    this.setDate();\n  }\n  componentWillUpdate (prevProps) {\n    const {\n      baseDate = '',\n      targetDate = '',\n      // 'this.props.match.params', passed down manually from parent (App)\n      match: {\n        params: {\n          urlMode = ''\n        } = {}\n      } = {},\n    } = this.props;\n    // Do this _once_ as the 'basePeriod' can only be set once 'now' has started ticking\n    if (prevProps.basePeriod === '') {\n      if (urlMode === 'relative-to-now' || urlMode === 'discover-moment') {\n        this.setTimePeriod(baseDate);\n      } else if (urlMode === 'between-two-dates') {\n        this.setTimePeriod(targetDate);\n      }\n    }\n  }\n  setModeFromUrl () {\n    const {\n      // 'this.props.match.params', passed down manually from parent (App)\n      match: {\n        params: {\n          urlMode = ''\n        } = {}\n      } = {},\n      setModeAction\n    } = this.props;\n    if (urlMode) {\n      if (urlMode === 'between-two-dates') {\n        setModeAction('betweenTwoDates');\n      } else if (urlMode === 'relative-to-now') {\n        setModeAction('relativeToNow');\n      } else if (urlMode === 'discover-moment') {\n        setModeAction('discoverMoment');\n      }\n    }\n  }\n  setTimePeriod (value) {\n    // Determine if date is in the 'past' or 'future'\n    const {\n      nowDate = '',\n      targetDate = '',\n      setBaseDateIsInThePastAction,\n      setBasePeriodAction,\n      // 'this.props.match.params', passed down manually from parent (App)\n      match: {\n        params: {\n          urlMode = '',\n          urlBaseYear = '',\n        } = {}\n      } = {}\n    } = this.props;\n    // If 'urlBaseYear' is defined, we are definitely setting our dates based on\n    // 'URL' parameters\n    if (urlBaseYear) {\n      if (urlMode === 'relative-to-now' || urlMode === 'discover-moment') {\n        if (nowDate) {\n          setBasePeriodAction(timePeriod(nowDate, value));\n          if (timePeriod(nowDate, value) === 'past') {\n            setBaseDateIsInThePastAction(true);\n          } else {\n            setBaseDateIsInThePastAction(false);\n          }\n        }\n      } else if (urlMode === 'between-two-dates') {\n        if (targetDate) {\n          setBasePeriodAction(timePeriod(targetDate, value));\n          if (timePeriod(targetDate, value) === 'past') {\n            setBaseDateIsInThePastAction(true);\n          } else {\n            setBaseDateIsInThePastAction(false);\n          }\n        }\n      }\n    }\n  }\n  setDateBase () {\n    const {\n      // 'this.props.match.params', passed down manually from parent (App)\n      match: {\n        params: {\n          urlBaseYear = '',\n          urlBaseMonth = '',\n          urlBaseDay = '',\n          urlBaseHour = '',\n          urlBaseMinute = '',\n          urlBaseSecond = '',\n        } = {}\n      } = {},\n      setBaseDateAction,\n      setBaseYearDefinedAction,\n      setBaseYearAction,\n      setBaseMonthDefinedAction,\n      setBaseMonthAction,\n      setBaseMonthDayCountAction,\n      setBaseDayDefinedAction,\n      setBaseDayAction,\n      setBaseHourAction,\n      setBaseMinuteAction,\n      setBaseSecondAction,\n    } = this.props;\n    let theBaseDate = '';\n    let theBaseMonthDayCount = '';\n    if (urlBaseYear) {\n      if (urlBaseYear !== '') {\n        theBaseDate = moment().year(urlBaseYear).format(MOMENT_TIME_FORMAT);\n        theBaseMonthDayCount = moment(theBaseDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setBaseMonthDayCountAction(theBaseMonthDayCount);\n        setBaseYearDefinedAction(true);\n      } else {\n        setBaseYearDefinedAction(false);\n      }\n      setBaseYearAction(urlBaseYear);\n    }\n    if (urlBaseYear && urlBaseMonth) {\n      if (urlBaseYear !== '' && urlBaseMonth !== '') {\n        theBaseDate = moment().year(urlBaseYear).month(urlBaseMonth).format(MOMENT_TIME_FORMAT);\n        theBaseMonthDayCount = moment(theBaseDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setBaseMonthDayCountAction(theBaseMonthDayCount);\n        setBaseMonthAction(urlBaseMonth);\n        setBaseMonthDefinedAction(true);\n      } else {\n        setBaseMonthDefinedAction(false);\n      }\n    }\n    if (urlBaseYear && urlBaseMonth && urlBaseDay) {\n      if (urlBaseYear !== '' && urlBaseMonth !== '' && urlBaseDay !== '') {\n        theBaseDate = moment().year(urlBaseYear).month(urlBaseMonth).date(urlBaseDay).format(MOMENT_TIME_FORMAT);\n        setBaseDayAction(urlBaseDay);\n        setBaseDayDefinedAction(true);\n      } else {\n        setBaseDayDefinedAction(false);\n      }\n    }\n    if (urlBaseYear && urlBaseMonth && urlBaseDay && urlBaseHour) {\n      if (urlBaseYear !== '' && urlBaseMonth !== '' && urlBaseDay !== '' && urlBaseHour !== '') {\n        theBaseDate = moment().year(urlBaseYear).month(urlBaseMonth).date(urlBaseDay).hour(urlBaseHour).format(MOMENT_TIME_FORMAT);\n        setBaseHourAction(urlBaseHour);\n      }\n    }\n    if (urlBaseYear && urlBaseMonth && urlBaseDay && urlBaseHour && urlBaseMinute) {\n      if (urlBaseYear !== '' && urlBaseMonth !== '' && urlBaseDay !== '' && urlBaseHour !== '' && urlBaseMinute !== '') {\n        theBaseDate = moment().year(urlBaseYear).month(urlBaseMonth).date(urlBaseDay).hour(urlBaseHour).minute(urlBaseMinute).format(MOMENT_TIME_FORMAT);\n        setBaseMinuteAction(urlBaseMinute);\n      }\n    }\n    if (urlBaseYear && urlBaseMonth && urlBaseDay && urlBaseHour && urlBaseMinute && urlBaseSecond) {\n      if (urlBaseYear !== '' && urlBaseMonth !== '' && urlBaseDay !== '' && urlBaseHour !== '' && urlBaseMinute !== '' && urlBaseSecond !== '') {\n        theBaseDate = moment().year(urlBaseYear).month(urlBaseMonth).date(urlBaseDay).hour(urlBaseHour).minute(urlBaseMinute).second(urlBaseSecond).format(MOMENT_TIME_FORMAT);\n        setBaseSecondAction(urlBaseSecond);\n      }\n    }\n    if (theBaseDate !== '') {\n      setBaseDateAction(theBaseDate);\n      this.setTimePeriod(theBaseDate);\n    }\n  }\n  setDateTarget () {\n    const {\n      // 'this.props.match.params', passed down manually from parent (App)\n      match: {\n        params: {\n          urlTargetYear = '',\n          urlTargetMonth = '',\n          urlTargetDay = '',\n          urlTargetHour = '',\n          urlTargetMinute = '',\n          urlTargetSecond = '',\n        } = {}\n      } = {},\n      setTargetDateAction,\n      setTargetYearDefinedAction,\n      setTargetYearAction,\n      setTargetMonthDefinedAction,\n      setTargetMonthAction,\n      setTargetMonthDayCountAction,\n      setTargetDayDefinedAction,\n      setTargetDayAction,\n      setTargetHourAction,\n      setTargetMinuteAction,\n      setTargetSecondAction,\n    } = this.props;\n    let theTargetDate = '';\n    let theTargetMonthDayCount = '';\n    if (urlTargetYear) {\n      if (urlTargetYear !== '') {\n        theTargetDate = moment().year(urlTargetYear).format(MOMENT_TIME_FORMAT);\n        theTargetMonthDayCount = moment(theTargetDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setTargetMonthDayCountAction(theTargetMonthDayCount);\n        setTargetYearDefinedAction(true);\n      } else {\n        setTargetYearDefinedAction(false);\n      }\n      setTargetYearAction(urlTargetYear);\n    }\n    if (urlTargetYear && urlTargetMonth) {\n      if (urlTargetYear !== '' && urlTargetMonth !== '') {\n        theTargetDate = moment().year(urlTargetYear).month(urlTargetMonth).format(MOMENT_TIME_FORMAT);\n        theTargetMonthDayCount = moment(theTargetDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setTargetMonthDayCountAction(theTargetMonthDayCount);\n        setTargetMonthAction(urlTargetMonth);\n        setTargetMonthDefinedAction(true);\n      } else {\n        setTargetMonthDefinedAction(false);\n      }\n    }\n    if (urlTargetYear && urlTargetMonth && urlTargetDay) {\n      if (urlTargetYear !== '' && urlTargetMonth !== '' && urlTargetDay !== '') {\n        theTargetDate = moment().year(urlTargetYear).month(urlTargetMonth).date(urlTargetDay).format(MOMENT_TIME_FORMAT);\n        setTargetDayAction(urlTargetDay);\n        setTargetDayDefinedAction(true);\n      } else {\n        setTargetDayDefinedAction(false);\n      }\n    }\n    if (urlTargetYear && urlTargetMonth && urlTargetDay && urlTargetHour) {\n      if (urlTargetYear !== '' && urlTargetMonth !== '' && urlTargetDay !== '' && urlTargetHour !== '') {\n        theTargetDate = moment().year(urlTargetYear).month(urlTargetMonth).date(urlTargetDay).hour(urlTargetHour).format(MOMENT_TIME_FORMAT);\n        setTargetHourAction(urlTargetHour);\n      }\n    }\n    if (urlTargetYear && urlTargetMonth && urlTargetDay && urlTargetHour && urlTargetMinute) {\n      if (urlTargetYear !== '' && urlTargetMonth !== '' && urlTargetDay !== '' && urlTargetHour !== '' && urlTargetMinute !== '') {\n        theTargetDate = moment().year(urlTargetYear).month(urlTargetMonth).date(urlTargetDay).hour(urlTargetHour).minute(urlTargetMinute).format(MOMENT_TIME_FORMAT);\n        setTargetMinuteAction(urlTargetMinute);\n      }\n    }\n    if (urlTargetYear && urlTargetMonth && urlTargetDay && urlTargetHour && urlTargetMinute && urlTargetSecond) {\n      if (urlTargetYear !== '' && urlTargetMonth !== '' && urlTargetDay !== '' && urlTargetHour !== '' && urlTargetMinute !== '' && urlTargetSecond !== '') {\n        theTargetDate = moment().year(urlTargetYear).month(urlTargetMonth).date(urlTargetDay).hour(urlTargetHour).minute(urlTargetMinute).second(urlTargetSecond).format(MOMENT_TIME_FORMAT);\n        setTargetSecondAction(urlTargetSecond);\n      }\n    }\n    if (theTargetDate !== '') {\n      setTargetDateAction(theTargetDate);\n      this.setTimePeriod(theTargetDate);\n    }\n  }\n  setDate () {\n    const {\n      // 'this.props.match.params', passed down manually from parent (App)\n      match: {\n        params: {\n          urlMode = '',\n          urlBaseYear = '',\n          urlTargetYear = '',\n        } = {}\n      } = {}\n    } = this.props;\n    // If 'urlBaseYear' is defined, we are definitely setting our dates based on\n    // 'URL' parameters\n    if (urlBaseYear) {\n      if (urlMode === 'between-two-dates') {\n        this.setDateBase();\n        if (urlTargetYear) {\n          this.setDateTarget();\n        }\n      } else if (urlMode === 'relative-to-now' || urlMode === 'discover-moment') {\n        this.setDateBase();\n      }\n    }\n  }\n  render () {\n    // This component is just a state 'setter', nothing to render\n    return null;\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    mode: main.mode,\n    basePeriod: main.basePeriod,\n    baseDate: main.baseDate,\n    targetDate: main.targetDate,\n    nowDate: main.nowDate,\n  }\n}\nconst mapDispatchToProps = {\n  setBaseDateAction,\n  setBaseDateIsInThePastAction,\n  setBasePeriodAction,\n  setBaseYearDefinedAction,\n  setBaseMonthDefinedAction,\n  setBaseDayDefinedAction,\n  setBaseMonthDayCountAction,\n  setBaseYearAction,\n  setBaseMonthAction,\n  setBaseDayAction,\n  setBaseHourAction,\n  setBaseMinuteAction,\n  setBaseSecondAction,\n  setTargetDateAction,\n  setTargetYearDefinedAction,\n  setTargetMonthDefinedAction,\n  setTargetDayDefinedAction,\n  setTargetMonthDayCountAction,\n  setTargetYearAction,\n  setTargetMonthAction,\n  setTargetDayAction,\n  setTargetHourAction,\n  setTargetMinuteAction,\n  setTargetSecondAction,\n  setModeAction\n}\nconst SetDateFromUrlConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetDateFromUrl);\n\nSetDateFromUrl.propTypes = {\n  mode: PropTypes.string,\n  basePeriod: PropTypes.string,\n  baseDate: PropTypes.string,\n  targetDate: PropTypes.string,\n  nowDate: PropTypes.string,\n};\n\nexport default SetDateFromUrlConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport DateCard from './../components/time/DateCard';\nimport DatePickerBaseDate from './../components/time/DatePickerBaseDate';\nimport TimeDifference from './../components/time/TimeDifference';\nimport SetDateFromUrl from './../components/time/SetDateFromUrl';\n\nclass ModeRelativeToNow extends Component {\n  render () {\n    const {\n      match,\n      baseDate,\n      baseDateIsInThePast,\n      mode,\n      nowDate\n    } = this.props;\n    let classesFrstRow = 'col-12 col-md-6';\n    let classesSecondRow = 'col-12 col-md-6';\n    if (baseDateIsInThePast) {\n      classesFrstRow = 'col-12 col-md-6 order-2';\n      classesSecondRow = 'col-12 col-md-6 order-1';\n    }\n    return (\n      <section className=\"section section--alt\">\n        <SetDateFromUrl match={match}/>\n        <div className=\"container-fluid m-t-20 m-b-20\">\n          <>\n            {mode &&\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <DatePickerBaseDate/>\n                </div>\n              </div>\n            }\n            {mode && baseDate &&\n              <>\n                <div className=\"row\">\n                  <div className={classesFrstRow}>\n                    <DateCard\n                      heading = \"Now\"\n                      date = {nowDate}\n                    />\n                  </div>\n                  <div className={classesSecondRow}>\n                    <DateCard\n                      heading = \"Set date\"\n                      date = {baseDate}\n                      classes = \"bl-fav-orange-dark\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <TimeDifference\n                      timeA = {baseDate}\n                      timeB = {nowDate}\n                    />\n                  </div>\n                </div>\n              </>\n            }\n          </>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    mode: main.mode,\n    nowDate: main.nowDate\n  }\n}\n\nconst ModeRelativeToNowConnect = connect(\n  mapStateToProps\n)(ModeRelativeToNow);\n\nModeRelativeToNow.propTypes = {\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  mode: PropTypes.string,\n  nowDate: PropTypes.string\n};\n\nexport default ModeRelativeToNowConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { timePeriod } from './../../utils/timePeriodUtil';\n\n// Import actions\nimport {\n  setTargetDateAction,\n  setTargetNameAction,\n  setBaseDateIsInThePastAction,\n  setBasePeriodAction,\n  setTargetYearDefinedAction,\n  setAndResetTargetYearAction,\n  setAndResetTargetMonthAction,\n  setTargetMonthDayCountAction,\n  setTargetWeekAction,\n  setAndResetTargetDayAction,\n  setAndResetTargetHourAction,\n  setAndResetTargetMinuteAction,\n  setTargetSecondAction\n} from './../../store/duck/ducks';\n\nclass DropdownTargetDate extends Component {\n  setTimePeriod (value) {\n    // Determine if date is in the 'past' or 'future'\n    const {\n      baseDate = '',\n      setBaseDateIsInThePastAction,\n      setBasePeriodAction,\n    } = this.props;\n    if (baseDate) {\n      setBasePeriodAction(timePeriod(value, baseDate));\n      if (timePeriod(value, baseDate) === 'past') {\n        setBaseDateIsInThePastAction(true);\n      } else {\n        setBaseDateIsInThePastAction(false);\n      }\n    }\n  }\n  setTargetDate (value, mode) {\n    const {\n      targetYear,\n      targetMonth,\n      targetDay,\n      targetHour,\n      targetMinute,\n      setTargetDateAction,\n      setAndResetTargetYearAction,\n      setAndResetTargetMonthAction,\n      setTargetMonthDayCountAction,\n      setAndResetTargetDayAction,\n      setAndResetTargetHourAction,\n      setAndResetTargetMinuteAction,\n      setTargetSecondAction,\n      setTargetYearDefinedAction\n    } = this.props;\n    let theTargetDate = '';\n    let theTargetMonthDayCount = '';\n    if (mode === 'year') {\n      if (value !== '' && value !== undefined) {\n        theTargetDate = moment().year(value).format(MOMENT_TIME_FORMAT);\n        theTargetMonthDayCount = moment(theTargetDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setTargetMonthDayCountAction(theTargetMonthDayCount);\n        setTargetYearDefinedAction(true);\n      } else {\n        setTargetYearDefinedAction(false);\n      }\n      setAndResetTargetYearAction(value);\n    } else if (mode === 'month') {\n      theTargetDate = moment().year(targetYear).month(value).format(MOMENT_TIME_FORMAT);\n      theTargetMonthDayCount = moment(theTargetDate, MOMENT_TIME_FORMAT).daysInMonth();\n      setTargetMonthDayCountAction(theTargetMonthDayCount);\n      setAndResetTargetMonthAction(value);\n    } else if (mode === 'day') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(value).format(MOMENT_TIME_FORMAT);\n      setAndResetTargetDayAction(value);\n    } else if (mode === 'hour') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(targetDay).hour(value).format(MOMENT_TIME_FORMAT);\n      setAndResetTargetHourAction(value);\n    } else if (mode === 'minute') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(targetDay).hour(targetHour).minute(value).format(MOMENT_TIME_FORMAT);\n      setAndResetTargetMinuteAction(value);\n    } else if (mode === 'second') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(targetDay).hour(targetHour).minute(targetMinute).second(value).format(MOMENT_TIME_FORMAT);\n      setTargetSecondAction(value);\n    }\n    this.setTimePeriod(theTargetDate);\n    setTargetDateAction(theTargetDate);\n  }\n  render () {\n    const {\n      tabIndex = 1,\n      options = [],\n      value = '',\n      type = '',\n      disabled = false,\n      classes = ''\n    } = this.props;\n    return (\n      <div className=\"dropdown\">\n        <label className=\"hidden\" htmlFor=\"date-initial-select-hour\">{`Please select a ${type}:`}</label>\n        <select\n          tabIndex = {tabIndex}\n          id = {`date-initial-select-${type}`}\n          value = {value}\n          onChange = {e => {\n            this.setTargetDate(e.target.value, type);\n          }}\n          disabled = {disabled}\n          style = {{textTransform: 'capitalize'}}\n          className = {`form__dropdown m-b-20 ${classes}`}\n        >\n          <option key={uuidv4()} value=\"\">{type}</option>\n          {options}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    targetYear: main.targetYear,\n    targetMonth: main.targetMonth,\n    targetDay: main.targetDay,\n    targetHour: main.targetHour,\n    targetMinute: main.targetMinute,\n    baseDate: main.baseDate,\n  }\n}\nconst mapDispatchToProps = {\n  setTargetDateAction,\n  setTargetNameAction,\n  setBaseDateIsInThePastAction,\n  setBasePeriodAction,\n  setTargetYearDefinedAction,\n  setAndResetTargetYearAction,\n  setAndResetTargetMonthAction,\n  setTargetMonthDayCountAction,\n  setTargetWeekAction,\n  setAndResetTargetDayAction,\n  setAndResetTargetHourAction,\n  setAndResetTargetMinuteAction,\n  setTargetSecondAction\n}\nconst DropdownTargetDateConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DropdownTargetDate);\n\nDropdownTargetDate.propTypes = {\n  // Props related to select, passed down\n  options: PropTypes.array.isRequired,\n  tabIndex: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  classes: PropTypes.string,\n  // Props related to choices, passed from state\n  targetYear: PropTypes.string,\n  targetMonth: PropTypes.string,\n  targetDay: PropTypes.string,\n  targetHour: PropTypes.string,\n  targetMinute: PropTypes.string,\n  baseDate: PropTypes.string,\n};\n\nexport default DropdownTargetDateConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import utils\nimport { numberRange } from './../../utils/rangeUtil';\n\n// Import components\nimport DropdownTargetDate from './DropdownTargetDate';\n\nclass DatePickerTargetDate extends Component {\n  getTimeUnit (mode) {\n    const {\n      targetMonthDayCount\n    } = this.props;\n    const options = [];\n    let units = [];\n    if (mode === 'year') {\n      const thisYear = moment().year();\n      units = numberRange(1900, thisYear);\n    } else if (mode === 'month') {\n      units = moment.localeData().months();\n    } else if (mode === 'day') {\n      if (targetMonthDayCount) {\n        units = numberRange(1, targetMonthDayCount);\n      } else {\n        units = numberRange(1, 31);\n      }\n    } else if (mode === 'hour') {\n      units = numberRange(0, 23);\n    } else if (mode === 'minute' || mode === 'second') {\n      units = numberRange(0, 59);\n    }\n    units.map((item) => options.push(<option key={uuidv4()} value={item}>{item}</option>));\n    if (mode === 'year') {\n      return options.reverse();\n    }\n    return options;\n  }\n  renderInstructions () {\n    const {\n      // Props passed down\n      instructionStart = 'To get started, choose a year:',\n      instructionYearDefined = 'Refine your date:',\n      // Props passed from state\n      targetYearDefined = false,\n    } = this.props;\n    let instructions = '';\n    const optional = <span className=\"optional\">(optional)</span>;\n    if (!targetYearDefined) {\n      instructions = instructionStart;\n    } else {\n      instructions = instructionYearDefined;\n    }\n    return (\n      <div className=\"m-b-10 align-center\">\n        {instructions} {!targetYearDefined ? '' : optional}\n      </div>\n    );\n  }\n  render () {\n    const {\n      targetYearDefined = false,\n      targetMonthDefined = false,\n      targetDayDefined = false,\n      targetYear = '',\n      targetMonth = '',\n      targetDay = '',\n      targetHour = '',\n      targetMinute = '',\n      targetSecond = '',\n    } = this.props;\n    return (\n      <>\n        {this.renderInstructions()}\n        <div className=\"container-flex date-picker\">\n          <DropdownTargetDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('year')}\n            value = {targetYear}\n            type = \"year\"\n          />\n          {targetYearDefined &&\n            <DropdownTargetDate\n              tabIndex = \"1\"\n              options = {this.getTimeUnit('month')}\n              value = {targetMonth}\n              type = \"month\"\n            />\n          }\n          {targetMonthDefined &&\n            <DropdownTargetDate\n              tabIndex = \"1\"\n              options = {this.getTimeUnit('day')}\n              value = {targetDay}\n              type = \"day\"\n            />\n          }\n          {targetDayDefined &&\n            <>\n              <DropdownTargetDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('hour')}\n                value = {targetHour}\n                type = \"hour\"\n              />\n              <DropdownTargetDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('minute')}\n                value = {targetMinute}\n                type = \"minute\"\n              />\n              <DropdownTargetDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('second')}\n                value = {targetSecond}\n                type = \"second\"\n              />\n            </>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    targetYearDefined: main.targetYearDefined,\n    targetMonthDefined: main.targetMonthDefined,\n    targetDayDefined: main.targetDayDefined,\n    targetYear: main.targetYear,\n    targetMonth: main.targetMonth,\n    targetMonthDayCount: main.targetMonthDayCount,\n    targetDay: main.targetDay,\n    targetHour: main.targetHour,\n    targetMinute: main.targetMinute,\n    targetSecond: main.targetSecond,\n  }\n}\n\nconst DatePickerTargetDateConnect = connect(\n  mapStateToProps\n)(DatePickerTargetDate);\n\nDatePickerTargetDate.propTypes = {\n  // Props passed down\n  instructionStart: PropTypes.string,\n  instructionYearDefined: PropTypes.string,\n  // Props passed from state\n  targetYearDefined: PropTypes.bool,\n  targetMonthDefined: PropTypes.bool,\n  targetDayDefined: PropTypes.bool,\n  targetYear: PropTypes.string,\n  targetMonth: PropTypes.string,\n  targetMonthDayCount: PropTypes.number,\n  targetDay: PropTypes.string,\n  targetHour: PropTypes.string,\n  targetMinute: PropTypes.string,\n  targetSecond: PropTypes.string,\n};\n\nexport default DatePickerTargetDateConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport DateCard from './../components/time/DateCard';\nimport DatePickerBaseDate from './../components/time/DatePickerBaseDate';\nimport DatePickerTargetDate from './../components/time/DatePickerTargetDate';\nimport TimeDifference from './../components/time/TimeDifference';\nimport SetDateFromUrl from './../components/time/SetDateFromUrl';\n\nclass ModeBetweenTwoDates extends Component {\n  render () {\n    const {\n      match,\n      baseDate,\n      baseDateIsInThePast,\n      mode,\n      targetDate\n    } = this.props;\n    let classesFrstRow = 'col-12 col-md-6';\n    let classesSecondRow = 'col-12 col-md-6';\n    if (baseDateIsInThePast) {\n      classesFrstRow = 'col-12 col-md-6 order-2';\n      classesSecondRow = 'col-12 col-md-6 order-1';\n    }\n    return (\n      <section className=\"section section--alt\">\n        <SetDateFromUrl match={match}/>\n        <div className=\"container-fluid m-t-20 m-b-20\">\n          <>\n            {mode &&\n              <>\n                <div className=\"row m-b-20\">\n                  <div className=\"col-12\">\n                    <DatePickerBaseDate\n                      instructionStart = \"Choose a year for Date A:\"\n                      instructionYearDefined = \"Refine Date A:\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row m-b-20\">\n                  <div className=\"col-12\">\n                    <DatePickerTargetDate\n                      instructionStart = \"Choose a year for Date B:\"\n                      instructionYearDefined = \"Refine Date B:\"\n                    />\n                  </div>\n                </div>\n              </>\n            }\n            {mode && baseDate && targetDate &&\n              <>\n                <div className=\"row\">\n                  <div className={classesFrstRow}>\n                    <DateCard\n                      heading = \"Date B\"\n                      date = {targetDate}\n                      classes = \"bl-purple\"\n                    />\n                  </div>\n                  <div className={classesSecondRow}>\n                    <DateCard\n                      heading = \"Date A\"\n                      date = {baseDate}\n                      classes = \"bl-fav-orange-dark\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <TimeDifference\n                      timeA = {baseDate}\n                      timeB = {targetDate}\n                    />\n                  </div>\n                </div>\n              </>\n            }\n          </>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    mode: main.mode,\n    targetDate: main.targetDate\n  }\n}\n\nconst ModeBetweenTwoDatesConnect = connect(\n  mapStateToProps\n)(ModeBetweenTwoDates);\n\nModeBetweenTwoDates.propTypes = {\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  mode: PropTypes.string,\n  targetDate: PropTypes.string\n};\n\nexport default ModeBetweenTwoDatesConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { localizeThousand } from './../../utils/localizeThousandUtil';\n\n// Import actions\nimport {\n  setAddToBaseYearsAction,\n  setAddToBaseMonthsAction,\n  setAddToBaseWeeksAction,\n  setAddToBaseDaysAction,\n  setAddToBaseHoursAction,\n  setAddToBaseMinutesAction,\n  setAddToBaseSecondsAction,\n} from './../../store/duck/ducks';\n\nclass DiscoverMoments extends Component {\n  getDiscoverMomentsHeading (mode) {\n    const {\n      baseDate,\n      addToBaseDateYears,\n      addToBaseDateMonths,\n      addToBaseDateWeeks,\n      addToBaseDateDays,\n      addToBaseDateHours,\n      addToBaseDateMinutes,\n      addToBaseDateSeconds,\n    } = this.props;\n    let heading = '';\n    if (baseDate) {\n      if (mode === 'year' && addToBaseDateYears) {\n        heading = <span>{localizeThousand(addToBaseDateYears)} years from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'month' && addToBaseDateMonths) {\n        heading = <span>{localizeThousand(addToBaseDateMonths)} months from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'week' && addToBaseDateWeeks) {\n        heading = <span>{localizeThousand(addToBaseDateWeeks)} weeks from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'day' && addToBaseDateDays) {\n        heading = <span>{localizeThousand(addToBaseDateDays)} days from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'hour' && addToBaseDateHours) {\n        heading = <span>{localizeThousand(addToBaseDateHours)} hours from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'minute' && addToBaseDateMinutes) {\n        heading = <span>{localizeThousand(addToBaseDateMinutes)} minutes from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'second' && addToBaseDateSeconds) {\n        heading = <span>{localizeThousand(addToBaseDateSeconds)} seconds from {this.renderBaseDateName()}</span>;\n      }\n    }\n    return heading;\n  }\n  getDiscoverMomentsMoment (mode) {\n    const {\n      baseDate,\n      addToBaseDateYears,\n      addToBaseDateMonths,\n      addToBaseDateWeeks,\n      addToBaseDateDays,\n      addToBaseDateHours,\n      addToBaseDateMinutes,\n      addToBaseDateSeconds,\n    } = this.props;\n    let theMoment = '';\n    if (baseDate) {\n      if (mode === 'year' && addToBaseDateYears) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateYears, 'years').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'month' && addToBaseDateMonths) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateMonths, 'months').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'week' && addToBaseDateWeeks) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateWeeks, 'weeks').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'day' && addToBaseDateDays) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateDays, 'days').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'hour' && addToBaseDateHours) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateHours, 'hours').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'minute' && addToBaseDateMinutes) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateMinutes, 'minutes').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'second' && addToBaseDateSeconds) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateSeconds, 'seconds').format(MOMENT_TIME_FORMAT);\n      }\n    }\n    return theMoment;\n  }\n  renderBaseDateName () {\n    const {baseDateName} = this.props;\n    let name = <span className=\"font-montserrat-regular-italic\">'set date'</span>;\n    if (baseDateName) {\n      name = <span className=\"font-montserrat-regular-italic\">'{baseDateName}'</span>;\n    }\n    return name;\n  }\n  renderInputFields () {\n    const {\n      baseDate,\n      addToBaseDateYears,\n      addToBaseDateMonths,\n      addToBaseDateWeeks,\n      addToBaseDateDays,\n      addToBaseDateHours,\n      addToBaseDateMinutes,\n      addToBaseDateSeconds,\n      setAddToBaseYearsAction,\n      setAddToBaseMonthsAction,\n      setAddToBaseWeeksAction,\n      setAddToBaseDaysAction,\n      setAddToBaseHoursAction,\n      setAddToBaseMinutesAction,\n      setAddToBaseSecondsAction,\n    } = this.props;\n    if (baseDate) {\n      return (\n        <>\n          <h3 className=\"m-t-20 m-b-20\">Discover a <span className=\"font-montserrat-regular-italic\">Moment</span> relative to {this.renderBaseDateName()} by entering numbers below:</h3>\n          <div className={`time-unit-output years bl-purple${addToBaseDateYears ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"5\" onChange = {e => {\n              setAddToBaseYearsAction(e.target.value);\n            }}/> Years\n            {addToBaseDateYears ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('year')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('year')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output months bl-fuchsia${addToBaseDateMonths ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"6\" onChange = {e => {\n              setAddToBaseMonthsAction(e.target.value);\n            }}/> Months\n            {addToBaseDateMonths ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('month')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('month')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output weeks bl-red${addToBaseDateWeeks ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"7\" onChange = {e => {\n              setAddToBaseWeeksAction(e.target.value);\n            }}/> Weeks\n            {addToBaseDateWeeks ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('week')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('week')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output days bl-orange${addToBaseDateDays ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"7\" onChange = {e => {\n              setAddToBaseDaysAction(e.target.value);\n            }}/> Days\n            {addToBaseDateDays ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('day')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('day')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output hours bl-yellow${addToBaseDateHours ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"9\" onChange = {e => {\n              setAddToBaseHoursAction(e.target.value);\n            }}/> Hours\n            {addToBaseDateHours ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('hour')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('hour')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output minutes bl-fav-green-light${addToBaseDateMinutes ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"11\" onChange = {e => {\n              setAddToBaseMinutesAction(e.target.value);\n            }}/> Minutes\n            {addToBaseDateMinutes ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('minute')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('minute')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output seconds bl-teal${addToBaseDateSeconds ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"12\" onChange = {e => {\n              setAddToBaseSecondsAction(e.target.value);\n            }}/> Seconds\n            {addToBaseDateSeconds ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('second')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('second')}</p>\n              </>\n              : null\n            }\n          </div>\n        </>\n      )\n    }\n    return null;\n  }\n  render () {\n    return (\n      <>\n        {this.renderInputFields()}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDateName: main.baseDateName,\n    baseDate: main.baseDate,\n    addToBaseDateYears: main.addToBaseDateYears,\n    addToBaseDateMonths: main.addToBaseDateMonths,\n    addToBaseDateWeeks: main.addToBaseDateWeeks,\n    addToBaseDateDays: main.addToBaseDateDays,\n    addToBaseDateHours: main.addToBaseDateHours,\n    addToBaseDateMinutes: main.addToBaseDateMinutes,\n    addToBaseDateSeconds: main.addToBaseDateSeconds,\n  }\n}\nconst mapDispatchToProps = {\n  setAddToBaseYearsAction,\n  setAddToBaseMonthsAction,\n  setAddToBaseWeeksAction,\n  setAddToBaseDaysAction,\n  setAddToBaseHoursAction,\n  setAddToBaseMinutesAction,\n  setAddToBaseSecondsAction,\n}\nconst DiscoverMomentsConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverMoments);\n\nDiscoverMoments.propTypes = {\n  baseDateName: PropTypes.string,\n  baseDate: PropTypes.string,\n  addToBaseDateYears: PropTypes.number,\n  addToBaseDateMonths: PropTypes.number,\n  addToBaseDateWeeks: PropTypes.number,\n  addToBaseDateDays: PropTypes.number,\n  addToBaseDateHours: PropTypes.number,\n  addToBaseDateMinutes: PropTypes.number,\n  addToBaseDateSeconds: PropTypes.number,\n  setAddToBaseYearsAction: PropTypes.func,\n  setAddToBaseMonthsAction: PropTypes.func,\n  setAddToBaseWeeksAction: PropTypes.func,\n  setAddToBaseDaysAction: PropTypes.func,\n  setAddToBaseHoursAction: PropTypes.func,\n  setAddToBaseMinutesAction: PropTypes.func,\n  setAddToBaseSecondsAction: PropTypes.func,\n};\n\nexport default DiscoverMomentsConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport DateCard from './../components/time/DateCard';\nimport DatePickerBaseDate from './../components/time/DatePickerBaseDate';\nimport TimeDifference from './../components/time/TimeDifference';\nimport DiscoverMoments from './../components/time/DiscoverMoments';\nimport SetDateFromUrl from './../components/time/SetDateFromUrl';\n\nclass ModeDiscoverMoments extends Component {\n  render () {\n    const {\n      match,\n      baseDate,\n      nowDate\n    } = this.props;\n    return (\n      <section className=\"section section--alt\">\n        <SetDateFromUrl match={match}/>\n        <div className=\"container-fluid m-t-20 m-b-20\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <DatePickerBaseDate/>\n            </div>\n          </div>\n          {baseDate &&\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <DateCard\n                  heading = \"Set date\"\n                  date = {baseDate}\n                  classes = \"bl-fav-orange-dark\"\n                />\n              </div>\n            </div>\n          }\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <DiscoverMoments />\n              <TimeDifference\n                timeA = {baseDate}\n                timeB = {nowDate}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    nowDate: main.nowDate,\n  }\n}\n\nconst ModeDiscoverMomentsConnect = connect(\n  mapStateToProps\n)(ModeDiscoverMoments);\n\nModeDiscoverMoments.propTypes = {\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  nowDate: PropTypes.string,\n};\n\nexport default ModeDiscoverMomentsConnect;\n","// localStorage feature detection, courtesy https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API, simplified because we don't care if it's there but full\n\nimport {\n  LOCALSTORAGE_NAME,\n  LOCALSTORAGE_NAME_TIMESTAMP\n} from './../config';\n\n// Try to save to local storage, if possible return true, else false.\nfunction isAvail () {\n  let storage;\n  try {\n    storage = window.localStorage;\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nconst localStorageStub = (i, v) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.error('No localStorage', i, v);\n  }\n};\n\nexport const persistState  = isAvail()\n  ? (state)  => {\n    window.localStorage.setItem(LOCALSTORAGE_NAME, JSON.stringify(state))\n    window.localStorage.setItem(LOCALSTORAGE_NAME_TIMESTAMP, new Date().getTime())\n  }\n  : localStorageStub;\n\nexport const loadState = isAvail()\n  ? () => {\n    // Checks if there is a 'state' variable saved in localstorage, if so return the object, if not send an empty object\n    return (window.localStorage.getItem(LOCALSTORAGE_NAME))\n      ? JSON.parse(window.localStorage.getItem(LOCALSTORAGE_NAME))\n      : {};\n  }\n  : localStorageStub;\n\nexport const removePersistedState  = isAvail()\n  ? () => { window.localStorage.clear();}\n  : localStorageStub;\n\n// Checks if data in localStorage should be deleted. The expiredate is set to one day in milliseconds.\nexport const shouldStateInLocalStorageBeDeleted = isAvail()\n  ? () => {\n    const oneDay = 86400000; // milliseconds in one day\n    const stateSetDate = JSON.parse(window.localStorage.getItem(LOCALSTORAGE_NAME_TIMESTAMP));\n    const newdate = new Date().getTime();\n    if (stateSetDate) {\n      if ((newdate - stateSetDate) >= oneDay) {\n        return true\n      }\n    }\n    return false;\n  }\n  : localStorageStub;\n","// Import dependencies\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// Import utils\nimport * as serviceWorker from './serviceWorker';\n// Import styles\nimport './styles/main.scss';\n// Import components\nimport App from './components/App';\n// Import pages\nimport Api from './pages/Api';\nimport About from './pages/About';\nimport Home from './pages/Home';\nimport ModeRelativeToNow from './pages/ModeRelativeToNow';\nimport ModeBetweenTwoDates from './pages/ModeBetweenTwoDates';\nimport ModeDiscoverMoments from './pages/ModeDiscoverMoments';\n\n// Import store\nimport initStore from './store/store';\n\nconst store = initStore();\n\nReactDom.render((\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/api\" component={Api}/>\n          <Route exact path=\"/about\" component={About}/>\n          <Route exact path=\"/1/:urlMode/date-a/:urlBaseYear/:urlBaseMonth/:urlBaseDay/:urlBaseHour/:urlBaseMinute/:urlBaseSecond/\" component={ModeRelativeToNow}/>\n          <Route exact path=\"/2/:urlMode/date-a/:urlBaseYear/:urlBaseMonth/:urlBaseDay/:urlBaseHour/:urlBaseMinute/:urlBaseSecond/date-b/:urlTargetYear/:urlTargetMonth/:urlTargetDay/:urlTargetHour/:urlTargetMinute/:urlTargetSecond\" component={ModeBetweenTwoDates}/>\n          <Route exact path=\"/3/:urlMode/date-a/:urlBaseYear/:urlBaseMonth/:urlBaseDay/:urlBaseHour/:urlBaseMinute/:urlBaseSecond/\" component={ModeDiscoverMoments}/>\n          <Route exact path=\"/1/:urlMode\" component={ModeRelativeToNow}/>\n          <Route exact path=\"/2/:urlMode\" component={ModeBetweenTwoDates}/>\n          <Route exact path=\"/3/:urlMode\" component={ModeDiscoverMoments}/>\n        </Switch>\n      </App>\n    </HashRouter>\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Import dependencies\nimport { createStore, combineReducers, compose } from 'redux';\nimport throttle from 'lodash/throttle';\n\n// Import globals\nimport {\n  TIME_SAVE_TO_LOCAL,\n  LOCALSTORAGE_SAVE_STATUS\n} from './../config'\n\n// Import utils\nimport {\n  loadState,\n  persistState,\n  removePersistedState,\n  shouldStateInLocalStorageBeDeleted\n} from './../utils/localStorageUtil';\n\n// Import Saga\nimport {\n  reducerMain\n} from './duck/ducks';\n\nexport default function (mockWindow) {\n  let persistedState = loadState();\n  const rootReducer = combineReducers({\n    main: reducerMain\n  });\n\n  // Receive mock window or use global window\n  let finalWindow = mockWindow;\n  if (typeof window !== 'undefined') {\n    finalWindow = window;\n  }\n\n  // Redux dev tool extension snippet\n  const composeEnhancers = finalWindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // Creating the store and connecting the sagas with the redux devtool extension\n  let store = createStore(\n    rootReducer,\n    persistedState,\n    composeEnhancers()\n  );\n\n  // Subscribe to changes done to the store\n  // Throttle is used to make sure that there is not to many calls to the store\n  // Trottle -> https://lodash.com/docs/4.17.4#throttle\n\n  if (LOCALSTORAGE_SAVE_STATUS) {\n    store.subscribe(throttle(() => {\n      // Save the entire store to local storage as long as within 24h, else delete old localstorage data\n      (!shouldStateInLocalStorageBeDeleted())\n        ? persistState(store.getState())\n        : removePersistedState();\n    }, TIME_SAVE_TO_LOCAL))\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('NOT SAVING TO LOCALSTORAGE!');\n    }\n  }\n  return store\n}\n"],"sourceRoot":""}