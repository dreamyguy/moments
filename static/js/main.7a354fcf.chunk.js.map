{"version":3,"sources":["config.js","serviceWorker.js","components/layout/Header.js","store/duck/ducks.js","components/time/SetMode.js","components/time/ModePicker.js","components/time/NowTicker.js","components/App.js","pages/Api.js","pages/About.js","components/time/DateCard.js","utils/rangeUtil.js","utils/timePeriodUtil.js","components/time/DropdownBaseDate.js","components/time/DatePickerBaseDate.js","utils/localizeThousandUtil.js","utils/timeDiffUtil.js","components/time/TimeDifference.js","pages/ModeRelativeToNow.js","components/time/DropdownTargetDate.js","components/time/DatePickerTargetDate.js","pages/ModeBetweenTwoDates.js","components/time/DiscoverMoments.js","pages/ModeDiscoverMoments.js","utils/localStorageUtil.js","index.js","store/store.js"],"names":["module","exports","LOCALSTORAGE_NAME","LOCALSTORAGE_NAME_TIMESTAMP","LOCALSTORAGE_SAVE_STATUS","MOMENT_TIME_FORMAT","TIME_SAVE_TO_LOCAL","TIME_DELAY_ACTION","Boolean","window","location","hostname","match","Header","react_default","a","createElement","LOADING","ERROR","CLEAR_STATE","SET_MODE","SET_MOMENT_NOW_DATE","SET_MOMENT_NOW_YEAR","SET_MOMENT_NOW_MONTH","SET_MOMENT_NOW_WEEK","SET_MOMENT_NOW_DAY","SET_MOMENT_NOW_HOUR","SET_MOMENT_NOW_MINUTE","SET_MOMENT_NOW_SECOND","SET_MOMENT_BASE_DATE","SET_MOMENT_BASE_NAME","SET_MOMENT_BASE_DATE_IS_IN_THE_PAST","SET_MOMENT_BASE_DATE_IS_IN_THE_FUTURE","SET_MOMENT_BASE_YEAR_DEFINED","SET_MOMENT_BASE_YEAR","SET_MOMENT_BASE_MONTH","SET_MOMENT_BASE_MONTH_DAY_COUNT","SET_MOMENT_BASE_WEEK","SET_MOMENT_BASE_DAY","SET_MOMENT_BASE_HOUR","SET_MOMENT_BASE_MINUTE","SET_MOMENT_BASE_SECOND","SET_MOMENT_TARGET_DATE","SET_MOMENT_TARGET_NAME","SET_MOMENT_TARGET_DATE_IS_IN_THE_PAST","SET_MOMENT_TARGET_DATE_IS_IN_THE_FUTURE","SET_MOMENT_TARGET_YEAR_DEFINED","SET_MOMENT_TARGET_YEAR","SET_MOMENT_TARGET_MONTH","SET_MOMENT_TARGET_MONTH_DAY_COUNT","SET_MOMENT_TARGET_WEEK","SET_MOMENT_TARGET_DAY","SET_MOMENT_TARGET_HOUR","SET_MOMENT_TARGET_MINUTE","SET_MOMENT_TARGET_SECOND","SET_ADD_TO_BASE_DATE_YEARS","SET_ADD_TO_BASE_DATE_MONTHS","SET_ADD_TO_BASE_DATE_WEEKS","SET_ADD_TO_BASE_DATE_DAYS","SET_ADD_TO_BASE_DATE_HOURS","SET_ADD_TO_BASE_DATE_MINUTES","SET_ADD_TO_BASE_DATE_SECONDS","SET_FRONTEND","SET_MOBILE_MENU_STATUS","initialStateMain","loading","error","errorId","errorCode","errorMessage","errorMessageTitle","mode","nowDate","nowYear","nowMonth","nowDay","nowHour","nowMinute","nowSecond","baseDate","baseDateName","baseDateIsInThePast","baseDateIsInTheFuture","baseYearDefined","baseMonthDefined","baseDayDefined","baseYear","baseMonth","baseMonthDayCount","baseDay","baseHour","baseMinute","baseSecond","targetDate","targetDateName","targetDateIsInThePast","targetDateIsInTheFuture","targetYearDefined","targetMonthDefined","targetDayDefined","targetYear","targetMonth","targetMonthDayCount","targetDay","targetHour","targetMinute","targetSecond","addToBaseDateYears","addToBaseDateMonths","addToBaseDateWeeks","addToBaseDateDays","addToBaseDateHours","addToBaseDateMinutes","addToBaseDateSeconds","frontend","mobileMenuStatus","reducerMain","state","arguments","length","undefined","action","type","Object","objectSpread","payload","nowWeek","baseName","baseWeekDefined","baseWeek","targetName","targetWeekDefined","targetWeek","parseInt","SetMode","_this$props","this","props","_this$props$classes","classes","history","_this$props$mode","_this$props$modeType","modeType","_this$props$modeName","modeName","_this$props$modePath","modePath","setModeAction","classesButtonMode","concat","className","onClick","push","disabled","Component","mapDispatchToProps","SetModeConnect","connect","_ref","main","withRouter","ModePicker","instruction","optional","time_SetMode","ModePickerConnect","NowTicker","clearInterval","timerID","updateNow","_this","setInterval","tick","setMomentNowDateAction","moment","format","setMomentNowYearAction","setMomentNowMonthAction","setMomentNowDayAction","setMomentNowHourAction","setMomentNowMinuteAction","setMomentNowSecondAction","NowTickerConnect","App","layout_Header","time_ModePicker","children","time_NowTicker","Api","About","DateCard","_this$props$heading","heading","_this$props$date","date","numberRange","start","end","Array","fill","map","d","i","timePeriod","yearNow","yearToCheck","time","DropdownBaseDate","value","_this$props$nowYear","setMomentBaseDateIsInThePastAction","setMomentBaseDateIsInTheFutureAction","_this$props2","setMomentBaseDateAction","setMomentBaseYearAction","setMomentBaseMonthAction","setMomentBaseMonthDayCountAction","setMomentBaseDayAction","setMomentBaseHourAction","setMomentBaseMinuteAction","setMomentBaseSecondAction","setMomentBaseYearDefinedAction","theBaseDate","year","daysInMonth","setTimePeriod","month","hour","minute","second","_this$props3","_this$props3$tabIndex","tabIndex","_this$props3$options","options","_this$props3$value","_this$props3$type","_this$props3$disabled","_this$props3$classes","Fragment","htmlFor","id","onChange","e","setBaseDate","target","style","textTransform","key","uuidv4","setMomentBaseNameAction","setMomentBaseWeekAction","DropdownBaseDateConnect","DatePickerBaseDate","units","thisYear","localeData","months","item","reverse","_this$props$instructi","instructionStart","_this$props$instructi2","instructionYearDefined","_this$props$baseYearD","instructions","_this$props2$baseYear","_this$props2$baseMont","_this$props2$baseDayD","_this$props2$baseYear2","_this$props2$baseMont2","_this$props2$baseDay","_this$props2$baseHour","_this$props2$baseMinu","_this$props2$baseSeco","renderInstructions","time_DropdownBaseDate","getTimeUnit","DatePickerBaseDateConnect","localizeThousand","toLocaleString","replace","timeDiff","before","after","b","difference","diff","differenceLocalized","TimeDifference","_this$props$timeA","timeA","_this$props$timeB","timeB","renderHeading","TimeDifferenceConnect","ModeRelativeToNow","classesFrstRow","classesSecondRow","time_DatePickerBaseDate","time_DateCard","time_TimeDifference","ModeRelativeToNowConnect","DropdownTargetDate","_this$props$baseYear","setMomentTargetDateIsInThePastAction","setMomentTargetDateIsInTheFutureAction","setMomentTargetDateAction","setMomentTargetYearAction","setMomentTargetMonthAction","setMomentTargetMonthDayCountAction","setMomentTargetDayAction","setMomentTargetHourAction","setMomentTargetMinuteAction","setMomentTargetSecondAction","setMomentTargetYearDefinedAction","theTargetDate","setTargetDate","setMomentTargetNameAction","setMomentTargetWeekAction","DropdownTargetDateConnect","DatePickerTargetDate","_this$props$targetYea","_this$props2$targetYe","_this$props2$targetMo","_this$props2$targetDa","_this$props2$targetYe2","_this$props2$targetMo2","_this$props2$targetDa2","_this$props2$targetHo","_this$props2$targetMi","_this$props2$targetSe","time_DropdownTargetDate","DatePickerTargetDateConnect","time_DatePickerTargetDate","DiscoverMoments","renderBaseDateName","theMoment","add","name","setAddToBaseYearsAction","setAddToBaseMonthsAction","setAddToBaseWeeksAction","setAddToBaseDaysAction","setAddToBaseHoursAction","setAddToBaseMinutesAction","setAddToBaseSecondsAction","maxLength","getDiscoverMomentsHeading","getDiscoverMomentsMoment","renderInputFields","DiscoverMomentsConnect","ModeDiscoverMoments","time_DiscoverMoments","ModeDiscoverMomentsConnect","isAvail","storage","localStorage","x","setItem","removeItem","localStorageStub","v","process","persistState","JSON","stringify","Date","getTime","loadState","getItem","parse","removePersistedState","clear","shouldStateInLocalStorageBeDeleted","stateSetDate","newdate","store","mockWindow","persistedState","rootReducer","combineReducers","finalWindow","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","subscribe","throttle","getState","initStore","ReactDom","render","es","BrowserRouter","basename","components_App","Switch","Route","exact","path","component","ModeBetweenTwoDates","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a354fcf.chunk.js","sourcesContent":["\nmodule.exports = {\n  LOCALSTORAGE_NAME: 'stateMoments',\n  LOCALSTORAGE_NAME_TIMESTAMP: 'stateMomentsTimeStamp',\n  LOCALSTORAGE_SAVE_STATUS: false,\n  MOMENT_TIME_FORMAT: 'MMMM Do YYYY, HH:mm:ss',\n  TIME_SAVE_TO_LOCAL: 1000, // 1 SEC\n  TIME_DELAY_ACTION: 500, // 0.5 SEC\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst Header = () => (\n  <header>\n    <h2>Moments</h2>\n  </header>\n);\n\nexport default Header;\n","\n// ActionTypes - generic\nconst LOADING = 'LOADING';\nconst ERROR = 'ERROR';\nconst CLEAR_STATE = 'CLEAR_STATE';\nconst SET_MODE = 'SET_MODE'\n// ActionTypes - moment - now\nconst SET_MOMENT_NOW_DATE = 'SET_MOMENT_NOW_DATE';\nconst SET_MOMENT_NOW_YEAR = 'SET_MOMENT_NOW_YEAR';\nconst SET_MOMENT_NOW_MONTH = 'SET_MOMENT_NOW_MONTH';\nconst SET_MOMENT_NOW_WEEK = 'SET_MOMENT_NOW_WEEK';\nconst SET_MOMENT_NOW_DAY = 'SET_MOMENT_NOW_DAY';\nconst SET_MOMENT_NOW_HOUR = 'SET_MOMENT_NOW_HOUR';\nconst SET_MOMENT_NOW_MINUTE = 'SET_MOMENT_NOW_MINUTE';\nconst SET_MOMENT_NOW_SECOND = 'SET_MOMENT_NOW_SECOND';\n// ActionTypes - moment - base\nconst SET_MOMENT_BASE_DATE = 'SET_MOMENT_BASE_DATE';\nconst SET_MOMENT_BASE_NAME = 'SET_MOMENT_BASE_NAME';\nconst SET_MOMENT_BASE_DATE_IS_IN_THE_PAST = 'SET_MOMENT_BASE_DATE_IS_IN_THE_PAST';\nconst SET_MOMENT_BASE_DATE_IS_IN_THE_FUTURE = 'SET_MOMENT_BASE_DATE_IS_IN_THE_FUTURE';\nconst SET_MOMENT_BASE_YEAR_DEFINED = 'SET_MOMENT_BASE_YEAR_DEFINED';\nconst SET_MOMENT_BASE_YEAR = 'SET_MOMENT_BASE_YEAR';\nconst SET_MOMENT_BASE_MONTH = 'SET_MOMENT_BASE_MONTH';\nconst SET_MOMENT_BASE_MONTH_DAY_COUNT = 'SET_MOMENT_BASE_MONTH_DAY_COUNT';\nconst SET_MOMENT_BASE_WEEK = 'SET_MOMENT_BASE_WEEK';\nconst SET_MOMENT_BASE_DAY = 'SET_MOMENT_BASE_DAY';\nconst SET_MOMENT_BASE_HOUR = 'SET_MOMENT_BASE_HOUR';\nconst SET_MOMENT_BASE_MINUTE = 'SET_MOMENT_BASE_MINUTE';\nconst SET_MOMENT_BASE_SECOND = 'SET_MOMENT_BASE_SECOND';\n// ActionTypes - moment - target\nconst SET_MOMENT_TARGET_DATE = 'SET_MOMENT_TARGET_DATE';\nconst SET_MOMENT_TARGET_NAME = 'SET_MOMENT_TARGET_NAME';\nconst SET_MOMENT_TARGET_DATE_IS_IN_THE_PAST = 'SET_MOMENT_TARGET_DATE_IS_IN_THE_PAST';\nconst SET_MOMENT_TARGET_DATE_IS_IN_THE_FUTURE = 'SET_MOMENT_TARGET_DATE_IS_IN_THE_FUTURE';\nconst SET_MOMENT_TARGET_YEAR_DEFINED = 'SET_MOMENT_TARGET_YEAR_DEFINED';\nconst SET_MOMENT_TARGET_YEAR = 'SET_MOMENT_TARGET_YEAR';\nconst SET_MOMENT_TARGET_MONTH = 'SET_MOMENT_TARGET_MONTH';\nconst SET_MOMENT_TARGET_MONTH_DAY_COUNT = 'SET_MOMENT_TARGET_MONTH_DAY_COUNT';\nconst SET_MOMENT_TARGET_WEEK = 'SET_MOMENT_TARGET_WEEK';\nconst SET_MOMENT_TARGET_DAY = 'SET_MOMENT_TARGET_DAY';\nconst SET_MOMENT_TARGET_HOUR = 'SET_MOMENT_TARGET_HOUR';\nconst SET_MOMENT_TARGET_MINUTE = 'SET_MOMENT_TARGET_MINUTE';\nconst SET_MOMENT_TARGET_SECOND = 'SET_MOMENT_TARGET_SECOND';\n// ActionTypes - moment - add to base\nconst SET_ADD_TO_BASE_DATE_YEARS = 'SET_ADD_TO_BASE_DATE_YEARS';\nconst SET_ADD_TO_BASE_DATE_MONTHS = 'SET_ADD_TO_BASE_DATE_MONTHS';\nconst SET_ADD_TO_BASE_DATE_WEEKS = 'SET_ADD_TO_BASE_DATE_WEEKS';\nconst SET_ADD_TO_BASE_DATE_DAYS = 'SET_ADD_TO_BASE_DATE_DAYS';\nconst SET_ADD_TO_BASE_DATE_HOURS = 'SET_ADD_TO_BASE_DATE_HOURS';\nconst SET_ADD_TO_BASE_DATE_MINUTES = 'SET_ADD_TO_BASE_DATE_MINUTES';\nconst SET_ADD_TO_BASE_DATE_SECONDS = 'SET_ADD_TO_BASE_DATE_SECONDS';\n// ActionTypes - frontend\nconst SET_FRONTEND = 'SET_FRONTEND';\nconst SET_MOBILE_MENU_STATUS = 'SET_MOBILE_MENU_STATUS';\n\n// Initial state\nexport const initialStateMain = {\n  // Generic\n  loading: false,\n  error: false,\n  errorId: '',\n  errorCode: '',\n  errorMessage: '',\n  errorMessageTitle: '',\n  mode: '', // 'pastToNow', 'nowToFuture', 'twoDates', 'addToBase'\n  // Now moment\n  nowDate: '',\n  nowYear: '',\n  nowMonth: '',\n  nowDay: '',\n  nowHour: '',\n  nowMinute: '',\n  nowSecond: '',\n  // Base moment\n  baseDate: '',\n  baseDateName: '',\n  baseDateIsInThePast: false,\n  baseDateIsInTheFuture: false,\n  baseYearDefined: false,\n  baseMonthDefined: false,\n  baseDayDefined: false,\n  baseYear: '',\n  baseMonth: '',\n  baseMonthDayCount: null,\n  baseDay: '',\n  baseHour: '',\n  baseMinute: '',\n  baseSecond: '',\n  // Target moment\n  targetDate: '',\n  targetDateName: '',\n  targetDateIsInThePast: false,\n  targetDateIsInTheFuture: false,\n  targetYearDefined: false,\n  targetMonthDefined: false,\n  targetDayDefined: false,\n  targetYear: '',\n  targetMonth: '',\n  targetMonthDayCount: null,\n  targetDay: '',\n  targetHour: '',\n  targetMinute: '',\n  targetSecond: '',\n  // 'Add to base' mode\n  addToBaseDateYears: null,\n  addToBaseDateMonths: null,\n  addToBaseDateWeeks: null,\n  addToBaseDateDays: null,\n  addToBaseDateHours: null,\n  addToBaseDateMinutes: null,\n  addToBaseDateSeconds: null,\n  // Frontend\n  frontend: {\n    mobileMenuStatus: false,\n  }\n}\n\n// Reducers\nexport function reducerMain (state = initialStateMain, action) {\n  switch (action.type) {\n    // generic\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errorId: action.payload.errorId,\n        errorCode: action.payload.errorCode,\n        errorMessage: action.payload.errorMessage,\n        errorMessageTitle: action.payload.errorMessageTitle\n      }\n    case CLEAR_STATE:\n      return initialStateMain\n    case SET_MODE:\n      return {\n        ...state,\n        loading: false,\n        mode: action.payload\n      }\n    // Now moment\n    case SET_MOMENT_NOW_DATE:\n      return {\n        ...state,\n        loading: false,\n        nowDate: action.payload\n      }\n    case SET_MOMENT_NOW_YEAR:\n      return {\n        ...state,\n        loading: false,\n        nowYear: action.payload,\n      }\n    case SET_MOMENT_NOW_MONTH:\n      return {\n        ...state,\n        loading: false,\n        nowMonth: action.payload\n      }\n    case SET_MOMENT_NOW_WEEK:\n      return {\n        ...state,\n        loading: false,\n        nowWeek: action.payload\n      }\n    case SET_MOMENT_NOW_DAY:\n      return {\n        ...state,\n        loading: false,\n        nowDay: action.payload\n      }\n    case SET_MOMENT_NOW_HOUR:\n      return {\n        ...state,\n        loading: false,\n        nowHour: action.payload\n      }\n    case SET_MOMENT_NOW_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        nowMinute: action.payload\n      }\n    case SET_MOMENT_NOW_SECOND:\n      return {\n        ...state,\n        loading: false,\n        nowSecond: action.payload\n      }\n    // Base moment\n    case SET_MOMENT_BASE_DATE:\n      return {\n        ...state,\n        loading: false,\n        baseDate: action.payload\n      }\n    case SET_MOMENT_BASE_NAME:\n      return {\n        ...state,\n        loading: false,\n        baseName: action.payload\n      }\n    case SET_MOMENT_BASE_DATE_IS_IN_THE_PAST:\n      return {\n        ...state,\n        loading: false,\n        baseDateIsInThePast: action.payload\n      }\n    case SET_MOMENT_BASE_DATE_IS_IN_THE_FUTURE:\n      return {\n        ...state,\n        loading: false,\n        baseDateIsInTheFuture: action.payload\n      }\n    case SET_MOMENT_BASE_YEAR_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        baseYearDefined: action.payload,\n      }\n    case SET_MOMENT_BASE_YEAR:\n      return {\n        ...state,\n        loading: false,\n        // Note that we can't set 'baseYearDefined: true' here,\n        // as this is an input field that needs to be validated. Because of that\n        // we should use 'SET_MOMENT_BASE_YEAR_DEFINED' instead\n        baseYear: action.payload,\n        baseMonth: '',\n        baseMonthDefined: false,\n        baseMonthDayCount: null,\n        baseDay: '',\n        baseDayDefined: false,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_MOMENT_BASE_MONTH:\n      return {\n        ...state,\n        loading: false,\n        baseMonthDefined: true,\n        baseMonth: action.payload,\n        baseDay: '',\n        baseDayDefined: false,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_MOMENT_BASE_MONTH_DAY_COUNT:\n      return {\n        ...state,\n        loading: false,\n        baseMonthDayCount: action.payload\n      }\n    case SET_MOMENT_BASE_WEEK:\n      return {\n        ...state,\n        loading: false,\n        baseWeekDefined: true,\n        baseWeek: action.payload,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_MOMENT_BASE_DAY:\n      return {\n        ...state,\n        loading: false,\n        baseDayDefined: true,\n        baseDay: action.payload,\n        baseHour: '',\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_MOMENT_BASE_HOUR:\n      return {\n        ...state,\n        loading: false,\n        baseHour: action.payload,\n        baseMinute: '',\n        baseSecond: '',\n      }\n    case SET_MOMENT_BASE_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        baseMinute: action.payload,\n        baseSecond: '',\n      }\n    case SET_MOMENT_BASE_SECOND:\n      return {\n        ...state,\n        loading: false,\n        baseSecond: action.payload\n      }\n    // Target moment\n    case SET_MOMENT_TARGET_DATE:\n      return {\n        ...state,\n        loading: false,\n        targetDate: action.payload\n      }\n    case SET_MOMENT_TARGET_NAME:\n      return {\n        ...state,\n        loading: false,\n        targetName: action.payload\n      }\n    case SET_MOMENT_TARGET_DATE_IS_IN_THE_PAST:\n      return {\n        ...state,\n        loading: false,\n        targetDateIsInThePast: action.payload\n      }\n    case SET_MOMENT_TARGET_DATE_IS_IN_THE_FUTURE:\n      return {\n        ...state,\n        loading: false,\n        targetDateIsInTheFuture: action.payload\n      }\n    case SET_MOMENT_TARGET_YEAR_DEFINED:\n      return {\n        ...state,\n        loading: false,\n        targetYearDefined: action.payload,\n      }\n    case SET_MOMENT_TARGET_YEAR:\n      return {\n        ...state,\n        loading: false,\n        // Note that we can't set 'targetYearDefined: true' here,\n        // as this is an input field that needs to be validated. Because of that\n        // we should use 'SET_MOMENT_TARGET_YEAR_DEFINED' instead\n        targetYear: action.payload,\n        targetMonth: '',\n        targetMonthDefined: false,\n        targetMonthDayCount: null,\n        targetDay: '',\n        targetDayDefined: false,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_MOMENT_TARGET_MONTH:\n      return {\n        ...state,\n        loading: false,\n        targetMonthDefined: true,\n        targetMonth: action.payload,\n        targetDay: '',\n        targetDayDefined: false,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_MOMENT_TARGET_MONTH_DAY_COUNT:\n      return {\n        ...state,\n        loading: false,\n        targetMonthDayCount: action.payload\n      }\n    case SET_MOMENT_TARGET_WEEK:\n      return {\n        ...state,\n        loading: false,\n        targetWeekDefined: true,\n        targetWeek: action.payload,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_MOMENT_TARGET_DAY:\n      return {\n        ...state,\n        loading: false,\n        targetDayDefined: true,\n        targetDay: action.payload,\n        targetHour: '',\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_MOMENT_TARGET_HOUR:\n      return {\n        ...state,\n        loading: false,\n        targetHour: action.payload,\n        targetMinute: '',\n        targetSecond: '',\n      }\n    case SET_MOMENT_TARGET_MINUTE:\n      return {\n        ...state,\n        loading: false,\n        targetMinute: action.payload,\n        targetSecond: '',\n      }\n    case SET_MOMENT_TARGET_SECOND:\n      return {\n        ...state,\n        loading: false,\n        targetSecond: action.payload\n      }\n    // 'Add to base' mode\n    case SET_ADD_TO_BASE_DATE_YEARS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateYears: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_MONTHS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateMonths: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_WEEKS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateWeeks: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_DAYS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateDays: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_HOURS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateHours: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_MINUTES:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateMinutes: parseInt(action.payload, 10)\n      }\n    case SET_ADD_TO_BASE_DATE_SECONDS:\n      return {\n        ...state,\n        loading: false,\n        addToBaseDateSeconds: parseInt(action.payload, 10)\n      }\n    // Frontend\n    case SET_FRONTEND:\n      return {\n        ...state,\n        frontend: action.payload\n      }\n    case SET_MOBILE_MENU_STATUS:\n      return {\n        ...state,\n        loading: false,\n        frontend: {\n          ...state.frontend,\n          mobileMenuStatus: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n\n// Actions Generic\nexport const clearStateAction = (action) => ({ type: CLEAR_STATE, payload: action });\nexport const errorAction = (action) => ({ type: ERROR, payload: { errorId: action.errorId, errorCode: action.errorCode, errorMessage: action.errorMessage, errorMessageFriendlyTitle: action.errorMessageFriendlyTitle, errorMessageFriendly: action.errorMessageFriendly }}); // for testing\nexport const loadingAction = (action) => ({ type: LOADING, payload: action }); // for testing\nexport const setModeAction = (action) => ({ type: SET_MODE, payload: action });\n// ActionTypes - moment - now\nexport const setMomentNowDateAction = (action) => ({ type: SET_MOMENT_NOW_DATE, payload: action })\nexport const setMomentNowYearAction = (action) => ({ type: SET_MOMENT_NOW_YEAR, payload: action });\nexport const setMomentNowMonthAction = (action) => ({ type: SET_MOMENT_NOW_MONTH, payload: action });\nexport const setMomentNowWeekAction = (action) => ({ type: SET_MOMENT_NOW_WEEK, payload: action });\nexport const setMomentNowDayAction = (action) => ({ type: SET_MOMENT_NOW_DAY, payload: action });\nexport const setMomentNowHourAction = (action) => ({ type: SET_MOMENT_NOW_HOUR, payload: action });\nexport const setMomentNowMinuteAction = (action) => ({ type: SET_MOMENT_NOW_MINUTE, payload: action });\nexport const setMomentNowSecondAction = (action) => ({ type: SET_MOMENT_NOW_SECOND, payload: action });\n// ActionTypes - moment - base\nexport const setMomentBaseDateAction = (action) => ({ type: SET_MOMENT_BASE_DATE, payload: action });\nexport const setMomentBaseNameAction = (action) => ({ type: SET_MOMENT_BASE_NAME, payload: action });\nexport const setMomentBaseDateIsInThePastAction = (action) => ({ type: SET_MOMENT_BASE_DATE_IS_IN_THE_PAST, payload: action });\nexport const setMomentBaseDateIsInTheFutureAction = (action) => ({ type: SET_MOMENT_BASE_DATE_IS_IN_THE_FUTURE, payload: action });\nexport const setMomentBaseYearDefinedAction = (action) => ({ type: SET_MOMENT_BASE_YEAR_DEFINED, payload: action });\nexport const setMomentBaseYearAction = (action) => ({ type: SET_MOMENT_BASE_YEAR, payload: action });\nexport const setMomentBaseMonthAction = (action) => ({ type: SET_MOMENT_BASE_MONTH, payload: action });\nexport const setMomentBaseMonthDayCountAction = (action) => ({ type: SET_MOMENT_BASE_MONTH_DAY_COUNT, payload: action })\nexport const setMomentBaseWeekAction = (action) => ({ type: SET_MOMENT_BASE_WEEK, payload: action });\nexport const setMomentBaseDayAction = (action) => ({ type: SET_MOMENT_BASE_DAY, payload: action });\nexport const setMomentBaseHourAction = (action) => ({ type: SET_MOMENT_BASE_HOUR, payload: action });\nexport const setMomentBaseMinuteAction = (action) => ({ type: SET_MOMENT_BASE_MINUTE, payload: action });\nexport const setMomentBaseSecondAction = (action) => ({ type: SET_MOMENT_BASE_SECOND, payload: action });\n// ActionTypes - moment - target\nexport const setMomentTargetDateAction = (action) => ({ type: SET_MOMENT_TARGET_DATE, payload: action });\nexport const setMomentTargetNameAction = (action) => ({ type: SET_MOMENT_TARGET_NAME, payload: action });\nexport const setMomentTargetDateIsInThePastAction = (action) => ({ type: SET_MOMENT_TARGET_DATE_IS_IN_THE_PAST, payload: action });\nexport const setMomentTargetDateIsInTheFutureAction = (action) => ({ type: SET_MOMENT_TARGET_DATE_IS_IN_THE_FUTURE, payload: action });\nexport const setMomentTargetYearDefinedAction = (action) => ({ type: SET_MOMENT_TARGET_YEAR_DEFINED, payload: action });\nexport const setMomentTargetYearAction = (action) => ({ type: SET_MOMENT_TARGET_YEAR, payload: action });\nexport const setMomentTargetMonthAction = (action) => ({ type: SET_MOMENT_TARGET_MONTH, payload: action });\nexport const setMomentTargetMonthDayCountAction = (action) => ({ type: SET_MOMENT_TARGET_MONTH_DAY_COUNT, payload: action })\nexport const setMomentTargetWeekAction = (action) => ({ type: SET_MOMENT_TARGET_WEEK, payload: action });\nexport const setMomentTargetDayAction = (action) => ({ type: SET_MOMENT_TARGET_DAY, payload: action });\nexport const setMomentTargetHourAction = (action) => ({ type: SET_MOMENT_TARGET_HOUR, payload: action });\nexport const setMomentTargetMinuteAction = (action) => ({ type: SET_MOMENT_TARGET_MINUTE, payload: action });\nexport const setMomentTargetSecondAction = (action) => ({ type: SET_MOMENT_TARGET_SECOND, payload: action });\n// ActionTypes - moment - add to base\nexport const setAddToBaseYearsAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_YEARS, payload: action });\nexport const setAddToBaseMonthsAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_MONTHS, payload: action });\nexport const setAddToBaseWeeksAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_WEEKS, payload: action });\nexport const setAddToBaseDaysAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_DAYS, payload: action });\nexport const setAddToBaseHoursAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_HOURS, payload: action });\nexport const setAddToBaseMinutesAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_MINUTES, payload: action });\nexport const setAddToBaseSecondsAction = (action) => ({ type: SET_ADD_TO_BASE_DATE_SECONDS, payload: action });\n// ActionTypes - frontend\nexport const setMobileMenuStatusAction = (action) => ({ type: SET_MOBILE_MENU_STATUS, payload: action });\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import actions\nimport {\n  setModeAction\n} from './../../store/duck/ducks';\n\nclass SetMode extends Component {\n  render () {\n    const {\n      classes = '',\n      history,\n      mode = '',\n      modeType = '',\n      modeName = '',\n      modePath = '',\n      setModeAction\n    } = this.props;\n    let classesButtonMode = `button button--mode${classes ? ' ' + classes : ''}`;\n    if (mode) {\n      classesButtonMode = `button button--mode${mode === modeType ? ' selected' : ' not-selected'}${classes ? ' ' + classes : ''}`;\n    }\n    return (\n      <button\n        className={classesButtonMode}\n        onClick={() => {\n          setModeAction(mode === modeType ? '' : modeType)\n          if (history && modePath && !mode) {\n            // If 'mode' is not set, we want to navigate to 'modePath'\n            history.push(modePath);\n          } else if (history && modePath && mode) {\n            // If 'mode' is set, we want to navigate back to '/' as it's only a reset\n            history.push('/');\n          }\n        }}\n        disabled={mode && mode !== modeType ? true : false}\n      >\n        {modeName}\n      </button>\n    )\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    mode: main.mode\n  }\n}\nconst mapDispatchToProps = {\n  setModeAction,\n}\nconst SetModeConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SetMode);\n\nSetMode.propTypes = {\n  // Props passed down\n  modeName: PropTypes.string.isRequired,\n  modeType: PropTypes.string.isRequired,\n  modepath: PropTypes.string,\n  // Props coming from state\n  mode: PropTypes.string,\n  setModeAction: PropTypes.func.isRequired\n};\n\nexport default withRouter(SetModeConnect);\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport SetMode from './SetMode';\n\nclass ModePicker extends Component {\n  render () {\n    const {\n      mode = ''\n    } = this.props;\n    let instruction = 'Choose a mode';\n    if (mode) {\n      instruction = 'Selected mode';\n    }\n    const optional = <span className=\"optional\">(click to deselect)</span>;\n    return (\n      <section className=\"section--mode-picker\">\n        <div className=\"container m-t-20 m-b-20\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"container-flex\">\n                <p className=\"m-b-20\">{instruction} {mode ? optional : ''}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className={`${mode ? 'container-flex-center ' : 'container-flex '}mode-picker`}>\n                <SetMode\n                  modeType = \"relativeToNow\"\n                  modeName = \"Relative to Now\"\n                  modePath = \"/relative-to-now\"\n                />\n                <SetMode\n                  modeType = \"betweenTwoDates\"\n                  modeName = \"Between Two Dates\"\n                  modePath = \"/between-two-dates\"\n                />\n                <SetMode\n                  modeType = \"discoverMoment\"\n                  modeName = \"Discover Moment\"\n                  modePath = \"/discover-moment\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    mode: main.mode,\n  }\n}\nconst ModePickerConnect = connect(\n  mapStateToProps,\n)(ModePicker);\n\nModePicker.propTypes = {\n  // Props coming from state\n  mode: PropTypes.string\n};\n\nexport default ModePickerConnect;\n","// Import dependencies\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import actions\nimport {\n  setMomentNowDateAction,\n  setMomentNowYearAction,\n  setMomentNowMonthAction,\n  setMomentNowDayAction,\n  setMomentNowHourAction,\n  setMomentNowMinuteAction,\n  setMomentNowSecondAction\n} from './../../store/duck/ducks';\n\nclass NowTicker extends Component {\n  componentWillMount () {\n    clearInterval(this.timerID);\n    this.updateNow();\n  }\n  componentDidMount () {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n  updateNow () {\n    this.props.setMomentNowDateAction(moment().format(MOMENT_TIME_FORMAT));\n    this.props.setMomentNowYearAction(moment().format('YYYY'));\n    this.props.setMomentNowMonthAction(moment().format('MMMM'));\n    this.props.setMomentNowDayAction(moment().format('D'));\n    this.props.setMomentNowHourAction(moment().format('H'));\n    this.props.setMomentNowMinuteAction(moment().format('mm'));\n    this.props.setMomentNowSecondAction(moment().format('ss'));\n  }\n  tick () {\n    this.updateNow();\n  }\n  render () {\n    // This component is just a 'now' time ticker, nothing to render\n    return null;\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    nowDate: main.nowDate\n  }\n}\nconst mapDispatchToProps = {\n  setMomentNowDateAction,\n  setMomentNowYearAction,\n  setMomentNowMonthAction,\n  setMomentNowDayAction,\n  setMomentNowHourAction,\n  setMomentNowMinuteAction,\n  setMomentNowSecondAction\n}\nconst NowTickerConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NowTicker);\n\nNowTicker.propTypes = {\n  nowDate: PropTypes.string\n};\n\nexport default NowTickerConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\n\n// Import components\nimport Header from './layout/Header';\nimport ModePicker from './../components/time/ModePicker';\nimport NowTicker from './../components/time/NowTicker';\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"app\">\n        <Header/>\n        <ModePicker/>\n        <div className=\"content\">\n          {this.props.children}\n        </div>\n        <NowTicker/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nclass Api extends Component {\n  render () {\n    return (\n      <p>\n        Api\n      </p>\n    );\n  }\n}\n\nexport default Api;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render () {\n    return (\n      <p>\n        About\n      </p>\n    );\n  }\n}\n\nexport default About;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DateCard extends Component {\n  render () {\n    const {\n      heading = '',\n      date = '',\n      classes = ''\n    } = this.props;\n    return (\n      <div className={`date${classes ? ' ' + classes : ''}`}>\n        <h3 className=\"date__heading m-b-20\">\n          {heading}\n        </h3>\n        <div className=\"date__moment\">\n          {date}\n        </div>\n      </div>\n    )\n  }\n}\n\nDateCard.propTypes = {\n  heading: PropTypes.string,\n  date: PropTypes.string,\n  classes: PropTypes.string,\n};\n\nexport default DateCard;\n","export const numberRange = (start, end) => new Array(end - start + 1).fill().map((d, i) => i + start);\n\nexport const alphabetRange = (start, end) => new Array(end.charCodeAt(0) - start.charCodeAt(0) + 1).fill().map((d, i) => String.fromCharCode(i + start.charCodeAt(0)));\n\n// Uses:\n// numberRange(2, 8); // [ 2, 3, 4, 5, 6, 7, 8 ]\n// alphabetRange('c', 'g'); // [ 'c', 'd', 'e', 'f', 'g' ]","export const timePeriod = (yearNow, yearToCheck) => {\n  let time = '';\n  if (yearToCheck !== '' && yearToCheck !== undefined) {\n    const a = parseInt(yearNow, 10);\n    const b = parseInt(yearToCheck, 10);\n    if (a > b) {\n      time = 'past';\n    } else {\n      time = 'future';\n    }\n  }\n  return time;\n}\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { timePeriod } from './../../utils/timePeriodUtil';\n\n// Import actions\nimport {\n  setMomentBaseDateAction,\n  setMomentBaseNameAction,\n  setMomentBaseDateIsInThePastAction,\n  setMomentBaseDateIsInTheFutureAction,\n  setMomentBaseYearDefinedAction,\n  setMomentBaseYearAction,\n  setMomentBaseMonthAction,\n  setMomentBaseMonthDayCountAction,\n  setMomentBaseWeekAction,\n  setMomentBaseDayAction,\n  setMomentBaseHourAction,\n  setMomentBaseMinuteAction,\n  setMomentBaseSecondAction\n} from './../../store/duck/ducks';\n\nclass DropdownBaseDate extends Component {\n  setTimePeriod (value) {\n    // Determine if date is in the 'past' or 'future'\n    const {\n      nowYear = '',\n      setMomentBaseDateIsInThePastAction,\n      setMomentBaseDateIsInTheFutureAction,\n    } = this.props;\n    if (nowYear) {\n      if (timePeriod(nowYear, value) === 'past') {\n        setMomentBaseDateIsInThePastAction(true);\n        setMomentBaseDateIsInTheFutureAction(false);\n      } else if (timePeriod(nowYear, value) === 'future') {\n        setMomentBaseDateIsInThePastAction(false);\n        setMomentBaseDateIsInTheFutureAction(true);\n      } else {\n        setMomentBaseDateIsInThePastAction(false);\n        setMomentBaseDateIsInTheFutureAction(false);\n      }\n    }\n  }\n  setBaseDate (value, mode) {\n    const {\n      baseYear,\n      baseMonth,\n      baseDay,\n      baseHour,\n      baseMinute,\n      setMomentBaseDateAction,\n      setMomentBaseYearAction,\n      setMomentBaseMonthAction,\n      setMomentBaseMonthDayCountAction,\n      setMomentBaseDayAction,\n      setMomentBaseHourAction,\n      setMomentBaseMinuteAction,\n      setMomentBaseSecondAction,\n      setMomentBaseYearDefinedAction\n    } = this.props;\n    let theBaseDate = '';\n    let theBaseMonthDayCount = '';\n    if (mode === 'year') {\n      if (value !== '' && value !== undefined) {\n        theBaseDate = moment().year(value).format(MOMENT_TIME_FORMAT);\n        theBaseMonthDayCount = moment(theBaseDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setMomentBaseMonthDayCountAction(theBaseMonthDayCount);\n        setMomentBaseYearDefinedAction(true);\n      } else {\n        setMomentBaseYearDefinedAction(false);\n      }\n      setMomentBaseYearAction(value);\n      this.setTimePeriod(value);\n    } else if (mode === 'month') {\n      theBaseDate = moment().year(baseYear).month(value).format(MOMENT_TIME_FORMAT);\n      theBaseMonthDayCount = moment(theBaseDate, MOMENT_TIME_FORMAT).daysInMonth();\n      setMomentBaseMonthDayCountAction(theBaseMonthDayCount);\n      setMomentBaseMonthAction(value);\n    } else if (mode === 'day') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(value).format(MOMENT_TIME_FORMAT);\n      setMomentBaseDayAction(value);\n    } else if (mode === 'hour') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(baseDay).hour(value).format(MOMENT_TIME_FORMAT);\n      setMomentBaseHourAction(value);\n    } else if (mode === 'minute') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(baseDay).hour(baseHour).minute(value).format(MOMENT_TIME_FORMAT);\n      setMomentBaseMinuteAction(value);\n    } else if (mode === 'second') {\n      theBaseDate = moment().year(baseYear).month(baseMonth).date(baseDay).hour(baseHour).minute(baseMinute).second(value).format(MOMENT_TIME_FORMAT);\n      setMomentBaseSecondAction(value);\n    }\n    setMomentBaseDateAction(theBaseDate);\n  }\n  render () {\n    const {\n      tabIndex = 1,\n      options = [],\n      value = '',\n      type = '',\n      disabled = false,\n      classes = ''\n    } = this.props;\n    return (\n      <>\n        <label className=\"hidden\" htmlFor=\"date-initial-select-hour\">{`Please select a ${type}:`}</label>\n        <select\n          tabIndex = {tabIndex}\n          id = {`date-initial-select-${type}`}\n          value = {value}\n          onChange = {e => {\n            this.setBaseDate(e.target.value, type);\n          }}\n          disabled = {disabled}\n          style = {{textTransform: 'capitalize'}}\n          className = {`form__dropdown m-b-20 ${classes}`}\n        >\n          <option key={uuidv4()} value=\"\">{type}</option>\n          {options}\n        </select>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseYear: main.baseYear,\n    baseMonth: main.baseMonth,\n    baseDay: main.baseDay,\n    baseHour: main.baseHour,\n    baseMinute: main.baseMinute,\n    nowYear: main.nowYear,\n  }\n}\nconst mapDispatchToProps = {\n  setMomentBaseDateAction,\n  setMomentBaseNameAction,\n  setMomentBaseDateIsInThePastAction,\n  setMomentBaseDateIsInTheFutureAction,\n  setMomentBaseYearDefinedAction,\n  setMomentBaseYearAction,\n  setMomentBaseMonthAction,\n  setMomentBaseMonthDayCountAction,\n  setMomentBaseWeekAction,\n  setMomentBaseDayAction,\n  setMomentBaseHourAction,\n  setMomentBaseMinuteAction,\n  setMomentBaseSecondAction\n}\nconst DropdownBaseDateConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DropdownBaseDate);\n\nDropdownBaseDate.propTypes = {\n  // Props related to select, passed down\n  options: PropTypes.array.isRequired,\n  tabIndex: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  classes: PropTypes.string,\n  // Props related to choices, passed from state\n  baseYear: PropTypes.string,\n  baseMonth: PropTypes.string,\n  baseDay: PropTypes.string,\n  baseHour: PropTypes.string,\n  baseMinute: PropTypes.string,\n  nowYear: PropTypes.string,\n};\n\nexport default DropdownBaseDateConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import utils\nimport { numberRange } from './../../utils/rangeUtil';\n\n// Import components\nimport DropdownBaseDate from './DropdownBaseDate';\n\nclass DatePickerBaseDate extends Component {\n  getTimeUnit (mode) {\n    const {\n      baseMonthDayCount\n    } = this.props;\n    const options = [];\n    let units = [];\n    if (mode === 'year') {\n      const thisYear = moment().year();\n      units = numberRange(1900, thisYear);\n    } else if (mode === 'month') {\n      units = moment.localeData().months();\n    } else if (mode === 'day') {\n      if (baseMonthDayCount) {\n        units = numberRange(1, baseMonthDayCount);\n      } else {\n        units = numberRange(1, 31);\n      }\n    } else if (mode === 'hour') {\n      units = numberRange(0, 23);\n    } else if (mode === 'minute' || mode === 'second') {\n      units = numberRange(0, 59);\n    }\n    units.map((item) => options.push(<option key={uuidv4()} value={item}>{item}</option>));\n    if (mode === 'year') {\n      return options.reverse();\n    }\n    return options;\n  }\n  renderInstructions () {\n    const {\n      // Props passed down\n      instructionStart = 'To get started, choose a year:',\n      instructionYearDefined = 'Refine your date:',\n      // Props passed from state\n      baseYearDefined = false,\n    } = this.props;\n    let instructions = '';\n    const optional = <span className=\"optional\">(optional)</span>;\n    if (!baseYearDefined) {\n      instructions = instructionStart\n    } else {\n      instructions = instructionYearDefined;\n    }\n    return (\n      <div className=\"m-b-10 align-center\">\n        {instructions} {!baseYearDefined ? '' : optional}\n      </div>\n    );\n  }\n  render () {\n    const {\n      baseYearDefined = false,\n      baseMonthDefined = false,\n      baseDayDefined = false,\n      baseYear = '',\n      baseMonth = '',\n      baseDay = '',\n      baseHour = '',\n      baseMinute = '',\n      baseSecond = '',\n    } = this.props;\n    return (\n      <>\n        {this.renderInstructions()}\n        <div className=\"container-flex date-picker\">\n          <DropdownBaseDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('year')}\n            value = {baseYear}\n            type = \"year\"\n          />\n          <DropdownBaseDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('month')}\n            value = {baseMonth}\n            type = \"month\"\n            disabled={!baseYearDefined}\n            classes = {!baseYearDefined ? 'hidden' : ''}\n          />\n          <DropdownBaseDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('day')}\n            value = {baseDay}\n            type = \"day\"\n            disabled={!baseMonthDefined}\n            classes = {!baseMonthDefined ? 'hidden' : ''}\n          />\n          {baseDayDefined &&\n            <>\n              <DropdownBaseDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('hour')}\n                value = {baseHour}\n                type = \"hour\"\n              />\n              <DropdownBaseDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('minute')}\n                value = {baseMinute}\n                type = \"minute\"\n              />\n              <DropdownBaseDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('second')}\n                value = {baseSecond}\n                type = \"second\"\n              />\n            </>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseYearDefined: main.baseYearDefined,\n    baseMonthDefined: main.baseMonthDefined,\n    baseDayDefined: main.baseDayDefined,\n    baseYear: main.baseYear,\n    baseMonth: main.baseMonth,\n    baseMonthDayCount: main.baseMonthDayCount,\n    baseDay: main.baseDay,\n    baseHour: main.baseHour,\n    baseMinute: main.baseMinute,\n    baseSecond: main.baseSecond,\n  }\n}\n\nconst DatePickerBaseDateConnect = connect(\n  mapStateToProps\n)(DatePickerBaseDate);\n\nDatePickerBaseDate.propTypes = {\n  // Props passed down\n  instructionStart: PropTypes.string,\n  instructionYearDefined: PropTypes.string,\n  // Props passed from state\n  baseYearDefined: PropTypes.bool,\n  baseMonthDefined: PropTypes.bool,\n  baseDayDefined: PropTypes.bool,\n  baseYear: PropTypes.string,\n  baseMonth: PropTypes.string,\n  baseMonthDayCount: PropTypes.number,\n  baseDay: PropTypes.string,\n  baseHour: PropTypes.string,\n  baseMinute: PropTypes.string,\n  baseSecond: PropTypes.string,\n};\n\nexport default DatePickerBaseDateConnect;\n","export const localizeThousand = value => value.toLocaleString().replace('-', '');\n","// Import dependencies\nimport moment from 'moment';\n\n// Import utils\nimport { localizeThousand } from './localizeThousandUtil';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../config';\n\nexport const timeDiff = (before, after, type) => {\n  const a = moment(before, MOMENT_TIME_FORMAT);\n  const b = moment(after, MOMENT_TIME_FORMAT);\n  const difference = a.diff(b, type); // 'diff' is a 'moment' method\n  const differenceLocalized = localizeThousand(difference);\n  return `${differenceLocalized} ${type}`;\n}\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import utils\nimport { timeDiff } from './../../utils/timeDiffUtil';\n\nclass TimeDifference extends Component {\n  renderHeading () {\n    const {\n      // Passed down\n      timeA = '',\n      timeB = '',\n      // Passed from state\n      baseDate,\n      nowDate,\n      baseDateIsInThePast,\n      baseDateIsInTheFuture,\n    } = this.props;\n    // Support mode '1' & '3'\n    if (timeA === baseDate && timeB === nowDate) {\n      if (baseDateIsInThePast) {\n        return 'Time since';\n      }\n      if (baseDateIsInTheFuture) {\n        return 'Time until';\n      }\n    }\n    // Support mode '2'\n    // Note that there will be a check for 'timeA' & 'timeB'\n    // around the fallback return, so we're safe doing this\n    return 'Time difference';\n  }\n  render () {\n    const {\n      timeA,\n      timeB,\n    } = this.props;\n    if (timeA && timeB) {\n      return (\n        <>\n          <h3 className=\"m-t-20 m-b-20\">{this.renderHeading()}</h3>\n          <div className=\"time-unit-output bl-purple\">\n            {timeDiff(timeA, timeB, 'years')}\n          </div>\n          <div className=\"time-unit-output bl-fuchsia\">\n            {timeDiff(timeA, timeB, 'months')}\n          </div>\n          <div className=\"time-unit-output bl-red\">\n            {timeDiff(timeA, timeB, 'weeks')}\n          </div>\n          <div className=\"time-unit-output bl-orange\">\n            {timeDiff(timeA, timeB, 'days')}\n          </div>\n          <div className=\"time-unit-output bl-yellow\">\n            {timeDiff(timeA, timeB, 'hours')}\n          </div>\n          <div className=\"time-unit-output bl-fav-green-light\">\n            {timeDiff(timeA, timeB, 'minutes')}\n          </div>\n          <div className=\"time-unit-output bl-teal\">\n            {timeDiff(timeA, timeB, 'seconds')}\n          </div>\n        </>\n      )\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    baseDateIsInTheFuture: main.baseDateIsInTheFuture,\n    nowDate: main.nowDate,\n  }\n}\n\nconst TimeDifferenceConnect = connect(\n  mapStateToProps\n)(TimeDifference);\n\nTimeDifference.propTypes = {\n  // Passed down\n  timeA: PropTypes.string,\n  timeB: PropTypes.string,\n  // Passed from state\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  baseDateIsInTheFuture: PropTypes.bool,\n  nowDate: PropTypes.string,\n};\n\nexport default TimeDifferenceConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport DateCard from './../components/time/DateCard';\nimport DatePickerBaseDate from './../components/time/DatePickerBaseDate';\nimport TimeDifference from './../components/time/TimeDifference';\n\nclass ModeRelativeToNow extends Component {\n  render () {\n    const {\n      baseDate,\n      baseDateIsInThePast,\n      mode,\n      nowDate\n    } = this.props;\n    let classesFrstRow = 'col-12 col-md-6';\n    let classesSecondRow = 'col-12 col-md-6';\n    if (baseDateIsInThePast) {\n      classesFrstRow = 'col-12 col-md-6 order-2';\n      classesSecondRow = 'col-12 col-md-6 order-1';\n    }\n    return (\n      <section className=\"section section--alt\">\n        <div className=\"container m-t-20 m-b-20\">\n          <>\n            {mode &&\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <DatePickerBaseDate/>\n                </div>\n              </div>\n            }\n            {mode && baseDate &&\n              <>\n                <div className=\"row\">\n                  <div className={classesFrstRow}>\n                    <DateCard\n                      heading = \"Now\"\n                      date = {nowDate}\n                    />\n                  </div>\n                  <div className={classesSecondRow}>\n                    <DateCard\n                      heading = \"Set date\"\n                      date = {baseDate}\n                      classes = \"bl-fav-orange-dark\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <TimeDifference\n                      timeA = {baseDate}\n                      timeB = {nowDate}\n                    />\n                  </div>\n                </div>\n              </>\n            }\n          </>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    mode: main.mode,\n    nowDate: main.nowDate\n  }\n}\n\nconst ModeRelativeToNowConnect = connect(\n  mapStateToProps\n)(ModeRelativeToNow);\n\nModeRelativeToNow.propTypes = {\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  mode: PropTypes.string,\n  nowDate: PropTypes.string\n};\n\nexport default ModeRelativeToNowConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { timePeriod } from './../../utils/timePeriodUtil';\n\n// Import actions\nimport {\n  setMomentTargetDateAction,\n  setMomentTargetNameAction,\n  setMomentTargetDateIsInThePastAction,\n  setMomentTargetDateIsInTheFutureAction,\n  setMomentTargetYearDefinedAction,\n  setMomentTargetYearAction,\n  setMomentTargetMonthAction,\n  setMomentTargetMonthDayCountAction,\n  setMomentTargetWeekAction,\n  setMomentTargetDayAction,\n  setMomentTargetHourAction,\n  setMomentTargetMinuteAction,\n  setMomentTargetSecondAction\n} from './../../store/duck/ducks';\n\nclass DropdownTargetDate extends Component {\n  setTimePeriod (value) {\n    // Determine if date is in the 'past' or 'future'\n    const {\n      baseYear = '',\n      setMomentTargetDateIsInThePastAction,\n      setMomentTargetDateIsInTheFutureAction,\n    } = this.props;\n    if (baseYear) {\n      if (timePeriod(baseYear, value) === 'past') {\n        setMomentTargetDateIsInThePastAction(true);\n        setMomentTargetDateIsInTheFutureAction(false);\n      } else if (timePeriod(baseYear, value) === 'future') {\n        setMomentTargetDateIsInThePastAction(false);\n        setMomentTargetDateIsInTheFutureAction(true);\n      } else {\n        setMomentTargetDateIsInThePastAction(false);\n        setMomentTargetDateIsInTheFutureAction(false);\n      }\n    }\n  }\n  setTargetDate (value, mode) {\n    const {\n      targetYear,\n      targetMonth,\n      targetDay,\n      targetHour,\n      targetMinute,\n      setMomentTargetDateAction,\n      setMomentTargetYearAction,\n      setMomentTargetMonthAction,\n      setMomentTargetMonthDayCountAction,\n      setMomentTargetDayAction,\n      setMomentTargetHourAction,\n      setMomentTargetMinuteAction,\n      setMomentTargetSecondAction,\n      setMomentTargetYearDefinedAction\n    } = this.props;\n    let theTargetDate = '';\n    let theTargetMonthDayCount = '';\n    if (mode === 'year') {\n      if (value !== '' && value !== undefined) {\n        theTargetDate = moment().year(value).format(MOMENT_TIME_FORMAT);\n        theTargetMonthDayCount = moment(theTargetDate, MOMENT_TIME_FORMAT).daysInMonth();\n        setMomentTargetMonthDayCountAction(theTargetMonthDayCount);\n        setMomentTargetYearDefinedAction(true);\n      } else {\n        setMomentTargetYearDefinedAction(false);\n      }\n      setMomentTargetYearAction(value);\n      this.setTimePeriod(value);\n    } else if (mode === 'month') {\n      theTargetDate = moment().year(targetYear).month(value).format(MOMENT_TIME_FORMAT);\n      theTargetMonthDayCount = moment(theTargetDate, MOMENT_TIME_FORMAT).daysInMonth();\n      setMomentTargetMonthDayCountAction(theTargetMonthDayCount);\n      setMomentTargetMonthAction(value);\n    } else if (mode === 'day') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(value).format(MOMENT_TIME_FORMAT);\n      setMomentTargetDayAction(value);\n    } else if (mode === 'hour') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(targetDay).hour(value).format(MOMENT_TIME_FORMAT);\n      setMomentTargetHourAction(value);\n    } else if (mode === 'minute') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(targetDay).hour(targetHour).minute(value).format(MOMENT_TIME_FORMAT);\n      setMomentTargetMinuteAction(value);\n    } else if (mode === 'second') {\n      theTargetDate = moment().year(targetYear).month(targetMonth).date(targetDay).hour(targetHour).minute(targetMinute).second(value).format(MOMENT_TIME_FORMAT);\n      setMomentTargetSecondAction(value);\n    }\n    setMomentTargetDateAction(theTargetDate);\n  }\n  render () {\n    const {\n      tabIndex = 1,\n      options = [],\n      value = '',\n      type = '',\n      disabled = false,\n      classes = ''\n    } = this.props;\n    return (\n      <>\n        <label className=\"hidden\" htmlFor=\"date-initial-select-hour\">{`Please select a ${type}:`}</label>\n        <select\n          tabIndex = {tabIndex}\n          id = {`date-initial-select-${type}`}\n          value = {value}\n          onChange = {e => {\n            this.setTargetDate(e.target.value, type);\n          }}\n          disabled = {disabled}\n          style = {{textTransform: 'capitalize'}}\n          className = {`form__dropdown m-b-20 ${classes}`}\n        >\n          <option key={uuidv4()} value=\"\">{type}</option>\n          {options}\n        </select>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    targetYear: main.targetYear,\n    targetMonth: main.targetMonth,\n    targetDay: main.targetDay,\n    targetHour: main.targetHour,\n    targetMinute: main.targetMinute,\n    baseYear: main.baseYear,\n  }\n}\nconst mapDispatchToProps = {\n  setMomentTargetDateAction,\n  setMomentTargetNameAction,\n  setMomentTargetDateIsInThePastAction,\n  setMomentTargetDateIsInTheFutureAction,\n  setMomentTargetYearDefinedAction,\n  setMomentTargetYearAction,\n  setMomentTargetMonthAction,\n  setMomentTargetMonthDayCountAction,\n  setMomentTargetWeekAction,\n  setMomentTargetDayAction,\n  setMomentTargetHourAction,\n  setMomentTargetMinuteAction,\n  setMomentTargetSecondAction\n}\nconst DropdownTargetDateConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DropdownTargetDate);\n\nDropdownTargetDate.propTypes = {\n  // Props related to select, passed down\n  options: PropTypes.array.isRequired,\n  tabIndex: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  classes: PropTypes.string,\n  // Props related to choices, passed from state\n  targetYear: PropTypes.string,\n  targetMonth: PropTypes.string,\n  targetDay: PropTypes.string,\n  targetHour: PropTypes.string,\n  targetMinute: PropTypes.string,\n  baseYear: PropTypes.string,\n};\n\nexport default DropdownTargetDateConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuidv4 from 'uuid/v4';\n\n// Import utils\nimport { numberRange } from './../../utils/rangeUtil';\n\n// Import components\nimport DropdownTargetDate from './DropdownTargetDate';\n\nclass DatePickerTargetDate extends Component {\n  getTimeUnit (mode) {\n    const {\n      targetMonthDayCount\n    } = this.props;\n    const options = [];\n    let units = [];\n    if (mode === 'year') {\n      const thisYear = moment().year();\n      units = numberRange(1900, thisYear);\n    } else if (mode === 'month') {\n      units = moment.localeData().months();\n    } else if (mode === 'day') {\n      if (targetMonthDayCount) {\n        units = numberRange(1, targetMonthDayCount);\n      } else {\n        units = numberRange(1, 31);\n      }\n    } else if (mode === 'hour') {\n      units = numberRange(0, 23);\n    } else if (mode === 'minute' || mode === 'second') {\n      units = numberRange(0, 59);\n    }\n    units.map((item) => options.push(<option key={uuidv4()} value={item}>{item}</option>));\n    if (mode === 'year') {\n      return options.reverse();\n    }\n    return options;\n  }\n  renderInstructions () {\n    const {\n      // Props passed down\n      instructionStart = 'To get started, choose a year:',\n      instructionYearDefined = 'Refine your date:',\n      // Props passed from state\n      targetYearDefined = false,\n    } = this.props;\n    let instructions = '';\n    const optional = <span className=\"optional\">(optional)</span>;\n    if (!targetYearDefined) {\n      instructions = instructionStart;\n    } else {\n      instructions = instructionYearDefined;\n    }\n    return (\n      <div className=\"m-b-10 align-center\">\n        {instructions} {!targetYearDefined ? '' : optional}\n      </div>\n    );\n  }\n  render () {\n    const {\n      targetYearDefined = false,\n      targetMonthDefined = false,\n      targetDayDefined = false,\n      targetYear = '',\n      targetMonth = '',\n      targetDay = '',\n      targetHour = '',\n      targetMinute = '',\n      targetSecond = '',\n    } = this.props;\n    return (\n      <>\n        {this.renderInstructions()}\n        <div className=\"container-flex date-picker\">\n          <DropdownTargetDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('year')}\n            value = {targetYear}\n            type = \"year\"\n          />\n          <DropdownTargetDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('month')}\n            value = {targetMonth}\n            type = \"month\"\n            disabled={!targetYearDefined}\n            classes = {!targetYearDefined ? 'hidden' : ''}\n          />\n          <DropdownTargetDate\n            tabIndex = \"1\"\n            options = {this.getTimeUnit('day')}\n            value = {targetDay}\n            type = \"day\"\n            disabled={!targetMonthDefined}\n            classes = {!targetMonthDefined ? 'hidden' : ''}\n          />\n          {targetDayDefined &&\n            <>\n              <DropdownTargetDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('hour')}\n                value = {targetHour}\n                type = \"hour\"\n              />\n              <DropdownTargetDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('minute')}\n                value = {targetMinute}\n                type = \"minute\"\n              />\n              <DropdownTargetDate\n                tabIndex = \"1\"\n                options = {this.getTimeUnit('second')}\n                value = {targetSecond}\n                type = \"second\"\n              />\n            </>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    targetYearDefined: main.targetYearDefined,\n    targetMonthDefined: main.targetMonthDefined,\n    targetDayDefined: main.targetDayDefined,\n    targetYear: main.targetYear,\n    targetMonth: main.targetMonth,\n    targetMonthDayCount: main.targetMonthDayCount,\n    targetDay: main.targetDay,\n    targetHour: main.targetHour,\n    targetMinute: main.targetMinute,\n    targetSecond: main.targetSecond,\n  }\n}\n\nconst DatePickerTargetDateConnect = connect(\n  mapStateToProps\n)(DatePickerTargetDate);\n\nDatePickerTargetDate.propTypes = {\n  // Props passed down\n  instructionStart: PropTypes.string,\n  instructionYearDefined: PropTypes.string,\n  // Props passed from state\n  targetYearDefined: PropTypes.bool,\n  targetMonthDefined: PropTypes.bool,\n  targetDayDefined: PropTypes.bool,\n  targetYear: PropTypes.string,\n  targetMonth: PropTypes.string,\n  targetMonthDayCount: PropTypes.number,\n  targetDay: PropTypes.string,\n  targetHour: PropTypes.string,\n  targetMinute: PropTypes.string,\n  targetSecond: PropTypes.string,\n};\n\nexport default DatePickerTargetDateConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport DateCard from './../components/time/DateCard';\nimport DatePickerBaseDate from './../components/time/DatePickerBaseDate';\nimport DatePickerTargetDate from './../components/time/DatePickerTargetDate';\nimport TimeDifference from './../components/time/TimeDifference';\n\nclass ModeRelativeToNow extends Component {\n  render () {\n    const {\n      baseDate,\n      targetDateIsInThePast,\n      mode,\n      targetDate\n    } = this.props;\n    let classesFrstRow = 'col-12 col-md-6';\n    let classesSecondRow = 'col-12 col-md-6';\n    if (targetDateIsInThePast) {\n      classesFrstRow = 'col-12 col-md-6 order-2';\n      classesSecondRow = 'col-12 col-md-6 order-1';\n    }\n    return (\n      <section className=\"section section--alt\">\n        <div className=\"container m-t-20 m-b-20\">\n          <>\n            {mode &&\n              <>\n                <div className=\"row m-b-20\">\n                  <div className=\"col-12\">\n                    <DatePickerBaseDate\n                      instructionStart = \"Choose a year for Date A:\"\n                      instructionYearDefined = \"Refine Date A:\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row m-b-20\">\n                  <div className=\"col-12\">\n                    <DatePickerTargetDate\n                      instructionStart = \"Choose a year for Date B:\"\n                      instructionYearDefined = \"Refine Date B:\"\n                    />\n                  </div>\n                </div>\n              </>\n            }\n            {mode && baseDate && targetDate &&\n              <>\n                <div className=\"row\">\n                  <div className={classesFrstRow}>\n                    <DateCard\n                      heading = \"Date A\"\n                      date = {baseDate}\n                      classes = \"bl-fav-orange-dark\"\n                    />\n                  </div>\n                  <div className={classesSecondRow}>\n                    <DateCard\n                      heading = \"Date B\"\n                      date = {targetDate}\n                      classes = \"bl-purple\"\n                    />\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <TimeDifference\n                      timeA = {baseDate}\n                      timeB = {targetDate}\n                    />\n                  </div>\n                </div>\n              </>\n            }\n          </>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    targetDateIsInThePast: main.targetDateIsInThePast,\n    mode: main.mode,\n    targetDate: main.targetDate\n  }\n}\n\nconst ModeRelativeToNowConnect = connect(\n  mapStateToProps\n)(ModeRelativeToNow);\n\nModeRelativeToNow.propTypes = {\n  baseDate: PropTypes.string,\n  targetDateIsInThePast: PropTypes.bool,\n  mode: PropTypes.string,\n  targetDate: PropTypes.string\n};\n\nexport default ModeRelativeToNowConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\n// Import constants\nimport { MOMENT_TIME_FORMAT } from './../../config';\n\n// Import utils\nimport { localizeThousand } from './../../utils/localizeThousandUtil';\n\n// Import actions\nimport {\n  setAddToBaseYearsAction,\n  setAddToBaseMonthsAction,\n  setAddToBaseWeeksAction,\n  setAddToBaseDaysAction,\n  setAddToBaseHoursAction,\n  setAddToBaseMinutesAction,\n  setAddToBaseSecondsAction,\n} from './../../store/duck/ducks';\n\nclass DiscoverMoments extends Component {\n  getDiscoverMomentsHeading (mode) {\n    const {\n      baseDate,\n      addToBaseDateYears,\n      addToBaseDateMonths,\n      addToBaseDateWeeks,\n      addToBaseDateDays,\n      addToBaseDateHours,\n      addToBaseDateMinutes,\n      addToBaseDateSeconds,\n    } = this.props;\n    let heading = '';\n    if (baseDate) {\n      if (mode === 'year' && addToBaseDateYears) {\n        heading = <span>{localizeThousand(addToBaseDateYears)} years from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'month' && addToBaseDateMonths) {\n        heading = <span>{localizeThousand(addToBaseDateMonths)} months from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'week' && addToBaseDateWeeks) {\n        heading = <span>{localizeThousand(addToBaseDateWeeks)} weeks from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'day' && addToBaseDateDays) {\n        heading = <span>{localizeThousand(addToBaseDateDays)} days from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'hour' && addToBaseDateHours) {\n        heading = <span>{localizeThousand(addToBaseDateHours)} hours from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'minute' && addToBaseDateMinutes) {\n        heading = <span>{localizeThousand(addToBaseDateMinutes)} minutes from {this.renderBaseDateName()}</span>;\n      } else if (mode === 'second' && addToBaseDateSeconds) {\n        heading = <span>{localizeThousand(addToBaseDateSeconds)} seconds from {this.renderBaseDateName()}</span>;\n      }\n    }\n    return heading;\n  }\n  getDiscoverMomentsMoment (mode) {\n    const {\n      baseDate,\n      addToBaseDateYears,\n      addToBaseDateMonths,\n      addToBaseDateWeeks,\n      addToBaseDateDays,\n      addToBaseDateHours,\n      addToBaseDateMinutes,\n      addToBaseDateSeconds,\n    } = this.props;\n    let theMoment = '';\n    if (baseDate) {\n      if (mode === 'year' && addToBaseDateYears) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateYears, 'years').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'month' && addToBaseDateMonths) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateMonths, 'months').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'week' && addToBaseDateWeeks) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateWeeks, 'weeks').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'day' && addToBaseDateDays) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateDays, 'days').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'hour' && addToBaseDateHours) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateHours, 'hours').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'minute' && addToBaseDateMinutes) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateMinutes, 'minutes').format(MOMENT_TIME_FORMAT);\n      } else if (mode === 'second' && addToBaseDateSeconds) {\n        theMoment = moment(baseDate, MOMENT_TIME_FORMAT).add(addToBaseDateSeconds, 'seconds').format(MOMENT_TIME_FORMAT);\n      }\n    }\n    return theMoment;\n  }\n  renderBaseDateName () {\n    const {baseDateName} = this.props;\n    let name = <span className=\"font-montserrat-regular-italic\">'set date'</span>;\n    if (baseDateName) {\n      name = <span className=\"font-montserrat-regular-italic\">'{baseDateName}'</span>;\n    }\n    return name;\n  }\n  renderInputFields () {\n    const {\n      baseDate,\n      addToBaseDateYears,\n      addToBaseDateMonths,\n      addToBaseDateWeeks,\n      addToBaseDateDays,\n      addToBaseDateHours,\n      addToBaseDateMinutes,\n      addToBaseDateSeconds,\n      setAddToBaseYearsAction,\n      setAddToBaseMonthsAction,\n      setAddToBaseWeeksAction,\n      setAddToBaseDaysAction,\n      setAddToBaseHoursAction,\n      setAddToBaseMinutesAction,\n      setAddToBaseSecondsAction,\n    } = this.props;\n    if (baseDate) {\n      return (\n        <>\n          <h3 className=\"m-t-20 m-b-20\">Discover a <span className=\"font-montserrat-regular-italic\">Moment</span> relative to {this.renderBaseDateName()} by entering numbers below:</h3>\n          <div className={`time-unit-output years bl-purple${addToBaseDateYears ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"5\" onChange = {e => {\n              setAddToBaseYearsAction(e.target.value);\n            }}/> Years\n            {addToBaseDateYears ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('year')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('year')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output months bl-fuchsia${addToBaseDateMonths ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"6\" onChange = {e => {\n              setAddToBaseMonthsAction(e.target.value);\n            }}/> Months\n            {addToBaseDateMonths ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('month')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('month')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output weeks bl-red${addToBaseDateWeeks ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"7\" onChange = {e => {\n              setAddToBaseWeeksAction(e.target.value);\n            }}/> Weeks\n            {addToBaseDateWeeks ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('week')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('week')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output days bl-orange${addToBaseDateDays ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"7\" onChange = {e => {\n              setAddToBaseDaysAction(e.target.value);\n            }}/> Days\n            {addToBaseDateDays ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('day')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('day')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output hours bl-yellow${addToBaseDateHours ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"9\" onChange = {e => {\n              setAddToBaseHoursAction(e.target.value);\n            }}/> Hours\n            {addToBaseDateHours ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('hour')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('hour')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output minutes bl-fav-green-light${addToBaseDateMinutes ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"11\" onChange = {e => {\n              setAddToBaseMinutesAction(e.target.value);\n            }}/> Minutes\n            {addToBaseDateMinutes ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('minute')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('minute')}</p>\n              </>\n              : null\n            }\n          </div>\n          <div className={`time-unit-output seconds bl-teal${addToBaseDateSeconds ? ' p-t-15 p-b-10' : ''}`}>\n            <input className=\"text-field\" maxLength=\"12\" onChange = {e => {\n              setAddToBaseSecondsAction(e.target.value);\n            }}/> Seconds\n            {addToBaseDateSeconds ?\n              <>\n                <h4 className=\"m-t-15\">{this.getDiscoverMomentsHeading('second')}</h4>\n                <p className=\"font-montserrat-light m-t-15\">{this.getDiscoverMomentsMoment('second')}</p>\n              </>\n              : null\n            }\n          </div>\n        </>\n      )\n    }\n    return null;\n  }\n  render () {\n    return (\n      <>\n        {this.renderInputFields()}\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDateName: main.baseDateName,\n    baseDate: main.baseDate,\n    addToBaseDateYears: main.addToBaseDateYears,\n    addToBaseDateMonths: main.addToBaseDateMonths,\n    addToBaseDateWeeks: main.addToBaseDateWeeks,\n    addToBaseDateDays: main.addToBaseDateDays,\n    addToBaseDateHours: main.addToBaseDateHours,\n    addToBaseDateMinutes: main.addToBaseDateMinutes,\n    addToBaseDateSeconds: main.addToBaseDateSeconds,\n  }\n}\nconst mapDispatchToProps = {\n  setAddToBaseYearsAction,\n  setAddToBaseMonthsAction,\n  setAddToBaseWeeksAction,\n  setAddToBaseDaysAction,\n  setAddToBaseHoursAction,\n  setAddToBaseMinutesAction,\n  setAddToBaseSecondsAction,\n}\nconst DiscoverMomentsConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiscoverMoments);\n\nDiscoverMoments.propTypes = {\n  baseDateName: PropTypes.string,\n  baseDate: PropTypes.string,\n  addToBaseDateYears: PropTypes.number,\n  addToBaseDateMonths: PropTypes.number,\n  addToBaseDateWeeks: PropTypes.number,\n  addToBaseDateDays: PropTypes.number,\n  addToBaseDateHours: PropTypes.number,\n  addToBaseDateMinutes: PropTypes.number,\n  addToBaseDateSeconds: PropTypes.number,\n  setAddToBaseYearsAction: PropTypes.func,\n  setAddToBaseMonthsAction: PropTypes.func,\n  setAddToBaseWeeksAction: PropTypes.func,\n  setAddToBaseDaysAction: PropTypes.func,\n  setAddToBaseHoursAction: PropTypes.func,\n  setAddToBaseMinutesAction: PropTypes.func,\n  setAddToBaseSecondsAction: PropTypes.func,\n};\n\nexport default DiscoverMomentsConnect;\n","// Import dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Import components\nimport DateCard from './../components/time/DateCard';\nimport DatePickerBaseDate from './../components/time/DatePickerBaseDate';\nimport TimeDifference from './../components/time/TimeDifference';\nimport DiscoverMoments from './../components/time/DiscoverMoments';\n\nclass ModeDiscoverMoments extends Component {\n  render () {\n    const {\n      baseDate,\n      nowDate\n    } = this.props;\n    return (\n      <section className=\"section section--alt\">\n        <div className=\"container m-t-20 m-b-20\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <DatePickerBaseDate/>\n            </div>\n          </div>\n          {baseDate &&\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <DateCard\n                  heading = \"Set date\"\n                  date = {baseDate}\n                  classes = \"bl-fav-orange-dark\"\n                />\n              </div>\n            </div>\n          }\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <DiscoverMoments />\n              <TimeDifference\n                timeA = {baseDate}\n                timeB = {nowDate}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({main}) => {\n  return {\n    baseDate: main.baseDate,\n    baseDateIsInThePast: main.baseDateIsInThePast,\n    baseDateIsInTheFuture: main.baseDateIsInTheFuture,\n    nowDate: main.nowDate,\n  }\n}\n\nconst ModeDiscoverMomentsConnect = connect(\n  mapStateToProps\n)(ModeDiscoverMoments);\n\nModeDiscoverMoments.propTypes = {\n  baseDate: PropTypes.string,\n  baseDateIsInThePast: PropTypes.bool,\n  baseDateIsInTheFuture: PropTypes.bool,\n  nowDate: PropTypes.string,\n};\n\nexport default ModeDiscoverMomentsConnect;\n","// localStorage feature detection, courtesy https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API, simplified because we don't care if it's there but full\n\nimport {\n  LOCALSTORAGE_NAME,\n  LOCALSTORAGE_NAME_TIMESTAMP\n} from './../config';\n\n// Try to save to local storage, if possible return true, else false.\nfunction isAvail () {\n  let storage;\n  try {\n    storage = window.localStorage;\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nconst localStorageStub = (i, v) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.error('No localStorage', i, v);\n  }\n};\n\nexport const persistState  = isAvail()\n  ? (state)  => {\n    window.localStorage.setItem(LOCALSTORAGE_NAME, JSON.stringify(state))\n    window.localStorage.setItem(LOCALSTORAGE_NAME_TIMESTAMP, new Date().getTime())\n  }\n  : localStorageStub;\n\nexport const loadState = isAvail()\n  ? () => {\n    // Checks if there is a 'state' variable saved in localstorage, if so return the object, if not send an empty object\n    return (window.localStorage.getItem(LOCALSTORAGE_NAME))\n      ? JSON.parse(window.localStorage.getItem(LOCALSTORAGE_NAME))\n      : {};\n  }\n  : localStorageStub;\n\nexport const removePersistedState  = isAvail()\n  ? () => { window.localStorage.clear();}\n  : localStorageStub;\n\n// Checks if data in localStorage should be deleted. The expiredate is set to one day in milliseconds.\nexport const shouldStateInLocalStorageBeDeleted = isAvail()\n  ? () => {\n    const oneDay = 86400000; // milliseconds in one day\n    const stateSetDate = JSON.parse(window.localStorage.getItem(LOCALSTORAGE_NAME_TIMESTAMP));\n    const newdate = new Date().getTime();\n    if (stateSetDate) {\n      if ((newdate - stateSetDate) >= oneDay) {\n        return true\n      }\n    }\n    return false;\n  }\n  : localStorageStub;\n","// Import dependencies\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// Import utils\nimport * as serviceWorker from './serviceWorker';\n// Import styles\nimport './styles/main.scss';\n// Import components\nimport App from './components/App';\n// Import pages\nimport Api from './pages/Api';\nimport About from './pages/About';\nimport ModeRelativeToNow from './pages/ModeRelativeToNow';\nimport ModeBetweenTwoDates from './pages/ModeBetweenTwoDates';\nimport ModeDiscoverMoments from './pages/ModeDiscoverMoments';\n\n// Import store\nimport initStore from './store/store';\n\nconst store = initStore();\n\nReactDom.render((\n  <Provider store={store}>\n    <BrowserRouter basename=\"/\">\n      <App>\n        <Switch>\n          <Route exact path=\"/\" component={ModeRelativeToNow}/>\n          <Route exact path=\"/api\" component={Api}/>\n          <Route exact path=\"/about\" component={About}/>\n          <Route exact path=\"/relative-to-now\" component={ModeRelativeToNow}/>\n          <Route exact path=\"/between-two-dates\" component={ModeBetweenTwoDates}/>\n          <Route exact path=\"/discover-moment\" component={ModeDiscoverMoments}/>\n        </Switch>\n      </App>\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Import dependencies\nimport { createStore, combineReducers, compose } from 'redux';\nimport throttle from 'lodash/throttle';\n\n// Import globals\nimport {\n  TIME_SAVE_TO_LOCAL,\n  LOCALSTORAGE_SAVE_STATUS\n} from './../config'\n\n// Import utils\nimport {\n  loadState,\n  persistState,\n  removePersistedState,\n  shouldStateInLocalStorageBeDeleted\n} from './../utils/localStorageUtil';\n\n// Import Saga\nimport {\n  reducerMain\n} from './duck/ducks';\n\nexport default function (mockWindow) {\n  let persistedState = loadState();\n  const rootReducer = combineReducers({\n    main: reducerMain\n  });\n\n  // Receive mock window or use global window\n  let finalWindow = mockWindow;\n  if (typeof window !== 'undefined') {\n    finalWindow = window;\n  }\n\n  // Redux dev tool extension snippet\n  const composeEnhancers = finalWindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  // Creating the store and connecting the sagas with the redux devtool extension\n  let store = createStore(\n    rootReducer,\n    persistedState,\n    composeEnhancers()\n  );\n\n  // Subscribe to changes done to the store\n  // Throttle is used to make sure that there is not to many calls to the store\n  // Trottle -> https://lodash.com/docs/4.17.4#throttle\n\n  if (LOCALSTORAGE_SAVE_STATUS) {\n    store.subscribe(throttle(() => {\n      // Save the entire store to local storage as long as within 24h, else delete old localstorage data\n      (!shouldStateInLocalStorageBeDeleted())\n        ? persistState(store.getState())\n        : removePersistedState();\n    }, TIME_SAVE_TO_LOCAL))\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('NOT SAVING TO LOCALSTORAGE!');\n    }\n  }\n  return store\n}\n"],"sourceRoot":""}